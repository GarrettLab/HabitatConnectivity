[{"path":"https://garrettlab.github.io/HabitatConnectivity/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://garrettlab.github.io/HabitatConnectivity/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/LinkWeightsAnalysis.html","id":"betweenness","dir":"Articles","previous_headings":"","what":"Betweenness","title":"Network centralities in GeoHabnet","text":"Getting host density Running Sensitivity Analysis    important note Betweenness centrality time intensive operation. Geohabnet uses wrapper around igraph::betweenness(). Refer (Csardi Nepusz 2006) details reading. cutoff parameter can used set threshold include link weights based threshold. Setting parameter also reflected closeness. configuration based run follows - get_parameters() -> modify values parameters.yaml -> set_parameters() -> run sensitivity_analysis()","code":"avocado_mon <- geohabnet::cropharvest_rast(\"potato\", \"monfreda\") avocado_result <- geohabnet::msean(avocado_mon, global = TRUE, link_threshold  = 0.000001,                                    inv_pl = list(beta = c(0.5),                                                  metrics = c(\"betweeness\"),                                                  weights = c(100),                                                  cutoff = -1), res = 24,                                    neg_exp = list(gamma = c(0.1),                                                   metrics = c(\"betweeness\"),                                                   weights = c(100), cutoff = -1)) ##  |---------|---------|---------|---------| = ##  |---------|---------|---------|---------| =                                             |---------|---------|---------|---------| === ##  |---------|---------|---------|---------| ="},{"path":[]},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/analysis.html","id":"abstract","dir":"Articles","previous_headings":"","what":"Abstract","title":"Mapping habitat connectivity with geohabnet","text":"Habitat connectivity can used analyse potential spread plant pathogen, pest, habitat-dependent species. Habitat connectivity species depends habitat availability (e.g., host availability plant pests pollinators availability favorable climate plant species), probability movement species habitat locations. geohabnet, habitat connectivity indicates importance habitat location facilitating spread species across geographic region, relative locations landscape. plant pathogens pests, spatial distribution host availability plays crucial role defining habitat availability establishment pest species. Locations abundant habitats (e.g., plant hosts) may play minor role species spread isolated. Yet, location limited habitat may play major role spread species acts bridge regions otherwise separated. geohabnet (Keshav, Plex, Garrett 2025) provides R-user community network-based approach estimate habitat connectivity across world. package supports 10 parameters potential influence habitat landscape connectivity. implementation geohabnet (Keshav, Plex, Garrett 2025) expands cropland connectivity method plant pathogens proposed (Xing et al. 2020) general way calculating habitat connectivity species. network-based framework one proposed (Xing et al. 2020). However, geohabnet provides flexibility users modify parameter values framework. Although article focuses use geohabnet (Keshav et al. 2023), useful know interested developers package design inspired widely used Configuration-based design software development (Majors 2022), (Nash DeMore 2009); (Allaire 2023) provides text based interface control parameters values risk analysis context. primary objective vignette help user familiarized geohabnet (Keshav et al. 2023), list capabilities get intuition behind . also describes implementation main functions geohabnet support intuition. Throughout article, citing external sites resources, relevant use package.","code":""},{"path":[]},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/analysis.html","id":"definitions","dir":"Articles","previous_headings":"Pre-requisites","what":"Definitions","title":"Mapping habitat connectivity with geohabnet","text":"Raster - Raster digital encoding representation geographic information grid cells pixels, cell contains value representing specific property attribute location. details raster data include spatial resolution, dimensions, geographic extent, useful identification processing. , use raster represent maps. TIFF(Tag Image File Format) type file stores geographic information form raster. (Keshav et al. 2023) tested using .tif .nc files able handle raster type file supported R package terra (Hijmans 2023) .","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/analysis.html","id":"external-materials","dir":"Articles","previous_headings":"Pre-requisites","what":"External materials","title":"Mapping habitat connectivity with geohabnet","text":"Download install R, R Studio - https://rstudio-education.github.io/hopr/starting.html/ Raster - https://www.adobe.com/creativecloud/file-types/image/raster.html TIFF - https://www.adobe.com/creativecloud/file-types/image/raster/tiff-file.html/","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/analysis.html","id":"data-sets","dir":"Articles","previous_headings":"Pre-requisites","what":"Data sets","title":"Mapping habitat connectivity with geohabnet","text":"estimating habitat connectivity understanding spread plant pathogens pests, use cropland density host availability around world proxy habitat availability (assumption can complemented species-specific environmental suitability better proxy habitat availability). use publicly available sources obtain crop distribution form raster layers. CROPGRIDS (Tang FHM 2024) EARTHSTAT (Monfreda, Ramankutty, Foley 2008) MapSpam (2010, 2017) (International Food Policy Research Institute 2019) CroplandCROS (Service 2025) GBIF (GBIF 2025) geodata provides set APIs access EARTHSTAT MapSPAM datasets directly R (see code ). raster layers data sources listed may need transformation using (Keshav et al. 2023). valid raster layer used one entry values pixel range 0 (habitat available) 1 (habitat available entirety pixel). example, data layers cropland fraction EARTHSTAT can directly provided functions without need re-scale entries. However, data layers harvested area CROPGRIDS need re-scaling values grid cell raster (see example ). visualization plots, geohabnet uses rnaturalearth rnaturalearth.","code":""},{"path":[]},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/analysis.html","id":"meta-information","dir":"Articles","previous_headings":"Quick Start","what":"Meta information","title":"Mapping habitat connectivity with geohabnet","text":"Package information - https://garrettlab.github.io/HabitatConnectivity/ CRAN site - https://CRAN.R-project.org/package=geohabnet Source code - https://github.com/GarrettLab/HabitatConnectivity/tree/main/geohabnet/ Report issues - https://github.com/GarrettLab/CroplandConnectivity/issues/ Garrett lab website - https://www.garrettlab.com/","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/analysis.html","id":"installation-and-loading","dir":"Articles","previous_headings":"Quick Start","what":"Installation and loading","title":"Mapping habitat connectivity with geohabnet","text":"Installing geohabnet automatically install dependencies R packages. See list dependencies using desc::desc(package = \"geohabnet\") Alternatively, can install development version geohabnet GitHub repository. Either way, now can load geohabnet R follows: point, can access help page using following","code":"if (!require(\"devtools\")) {   install.packages(\"devtools\") } if (!require(\"geohabnet\")) {   utils::install.packages(\"geohabnet\") } library(\"devtools\") #> Loading required package: usethis  if (!require(\"geohabnet\")) {   install_github(\"GarrettLab/HabitatConnectivity\", subdir = \"geohabnet\") } #> Loading required package: geohabnet library(geohabnet) ?geohabnet # For description of the package # and ?geohabnet::msean # For documentation of a function (in this case, the msean function)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/analysis.html","id":"habitat-connectivity-analysis-based-on-default-parameters","dir":"Articles","previous_headings":"Quick Start","what":"Habitat connectivity analysis based on default parameters","title":"Mapping habitat connectivity with geohabnet","text":"section illustrate habitat connectivity analysis can conducted using default set values supported parameters. example, use raster layer avocado harvested area CROPGRIDS (Tang FHM 2024) real-world case study habitat connectivity avocado-specific pathogens. example run analysis global geographical extent relatively quickly since crop presence around world relatively low. purposes demonstration, code sets host parameter programatically directly RStudio. Alternatively, parameters can fed via parameters.yaml interactive way using either path setting iwindow = TRUE windows prompt set_parameters()","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/analysis.html","id":"running-your-first-habitat-connectivity-analysis","dir":"Articles","previous_headings":"Quick Start","what":"Running your first habitat connectivity analysis","title":"Mapping habitat connectivity with geohabnet","text":"also replicating example, please first download avocado layer CROPGRIDS put folder currently working. Note downloading raster layer host availability (habitat availability) manually CROPGRIDS. However, alternative option getting data layer directly RStudio using geodata package (depending whether ). time, created vignette geodata working local machine R code provided. Note , apart getting raster R, also scaling entry values grid cell raster layer, harvested area hectares avocado cropland fraction. aggregating raster layer reduce computational cost running analysis (illustrative purposes , may need data set). also saving new avocado area fraction new raster layer local machines.","code":"#if (!require(geodata)) #  install.packages(\"geodata\") #avocado_sp <- geodata::crop_monfreda(crop = \"avocado\", var = \"area_ha\", path = tools::R_user_dir(\"geohabnet\", which = \"config\"))  library(terra) #> terra 1.8.50  #avocado_rast_input <- system.file(\"CROPGRIDSv1.08_avocado.nc\", package = \"geohabnet\", mustWork = TRUE) avocado_sp<-rast(\"CROPGRIDSv1.08_avocado.nc\") cell.area <- (0.05*111111)*(0.05*111111) /10000 #area in heactares avocado_sp<-avocado_sp$harvarea / cell.area #area in hectares  values(avocado_sp)<-ifelse(values(avocado_sp) > 0,                            values(avocado_sp), NaN) avocado_sp<-aggregate(avocado_sp, fact=2, fun=\"mean\", na.rm=TRUE) #> |---------|---------|---------|---------|=========================================                                           writeRaster(avocado_sp, \"avocado_density.tif\", overwrite=TRUE)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/analysis.html","id":"setting-values-in-a-function","dir":"Articles","previous_headings":"Quick Start > Running your first habitat connectivity analysis","what":"Setting values in a function","title":"Mapping habitat connectivity with geohabnet","text":"Now let’s visualize avocado area fraction looks like. internal implementation program deals object terra (Hijmans 2023) igraph(Csardi Nepusz 2006) . primary object type SpatRaster terra. example , use spatial raster obtained avocado. First, shows properties raster layer, learn . [gplot()] quickly shows content raster layer.  Now raster object R, raster layer can used input msean function (one main functions geohabnet) produce first habitat connectivity analysis. case, providing input always-required parameter - rast keeping default values parameters supported function (now). Running example usually takes 5-10 minutes depending processing power machine.    Many, many congratulations! just generated full sensitivity analysis habitat connectivity avocado-specific pathogens pests. Take minute appreciate beauty three outcome maps: map mean habitat connectivity, map variance habitat connectivity, map difference . Now let’s dive little bit nitty-gritty details. function msean similar sean except msean() able produce maps . also return different S4 objects: GeoNetwork object produced msean, sean produces GeoRasters object. results interpreted accordance values parameters factored arguments sean. Run ?sean see supported parameters. now, let’s focus parameters might want change. rast - spatRaster. Represents map habitat availability geographical area. example , avocado_sp, unique parameter provided msean. geoscale - Vector. Refers geographical coordinates form c(Xmin, Xmax, Ymin, Ymax). global - Logical. set TRUE, geoscale ignored. can get geographical scales used global habitat connectivity analysis (like one ) running highly recommended change default value global scales used global connectivity analysis since finalized several tries. However, need change global scale advanced use, can set different global geographic scales using following thresholds - Numeric. msean supports two types thresholds: host density link weights represented hd_threshold link_threshold, respectively. former threshold (host density threshold habitat availability threshold) excludes habitat connectivity analysis values aggregated raster layer threshold. latter threshold (link weight threshold) excludes habitat connectivity analysis entry values adjacency matrix threshold. Entries adjacency matrix (link weights corresponding network) product habitat availability relative likelihood dispersal pair locations selected region. resolution - Numeric. spatial aggregation value. context SpatRaster, parameter number pixels aggregated produce new finer/coarser version raster data layer. Default Outcomes - msean calculates, produces, plots three maps habitat connectivity region, outcomes produced sensitivity_analysis()(main function geohabnet). alternative sean() can called obtain results function call side effects.","code":"avocado_sp #> class       : SpatRaster  #> dimensions  : 1800, 3600, 1  (nrow, ncol, nlyr) #> resolution  : 0.1, 0.1  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        :     harvarea  #> min value   : 3.268422e-06  #> max value   : 1.700697e-01 gplot(avocado_sp) geo_net <- msean(avocado_sp) #> |---------|---------|---------|---------|===                                           #> Warning: [+] CRS do not match #> |---------|---------|---------|---------|=====                                           #> Warning: [+] CRS do not match #> |---------|---------|---------|---------|==========                                           #> Warning: [+] CRS do not match #> |---------|---------|---------|---------|===                                           #> Warning: [+] CRS do not match global_scales() #> $east #> [1] -24 180 -58  60 #>  #> $west #> [1] -140  -34  -58   60 #set_global_scales(list(east = c(-24, 180, -58, 60), west = c(-140, -34, -58, 60))) reso() #> [1] 12"},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/analysis.html","id":"using-configuration","dir":"Articles","previous_headings":"Quick Start > Running your first habitat connectivity analysis","what":"Using configuration","title":"Mapping habitat connectivity with geohabnet","text":"parameters available configuration thus control analysis. configuration file name parameters.yaml, currently supporting 10 parameters. intuition behind methodology provide basic interface setting new values. snippet describes basic usage configuration. Get initial configuration file. default function save file temporary directory tempdir(), however recommend saving path program write permissions. Using iwindow = TRUE prompt selection window save config file. file look something like - values must modified without modifying structure. order don’t matter program. new values configuration must fed workflow. purposes demonstration, code sets host parameter programmitically. parameters can fed via parameters.yaml interactive way well using either path setting iwindow = TRUE windows prompt set_parameters() get_parameters() fetch initial parameters. can, required re-fetch parameters modified configuration. Modify value feed workflow using set_parameters().","code":"config_file <- get_parameters(out_path = tempdir()) config_file #> [1] \"/var/folders/r5/zggvft9d3yn5kh51wqp78rd00000gn/T//Rtmprp11dF/parameters.yaml\" if (!require(\"geodata\")) {  install.packages(\"geodata\")  } #> Loading required package: geodata  path_to_avo <- \"avocado_density.tif\" #terra::sources(avocado_sp) params_file <- geohabnet::get_parameters()  if (!require(yaml))   install.packages(\"yaml\") #> Loading required package: yaml  params_yaml <- yaml::yaml.load_file(params_file) params_yaml$default$`CCRI parameters`$Host <- path_to_avo yaml::write_yaml(params_yaml, params_file)  geohabnet::set_parameters(params_file) #> [1] TRUE #using iwindow = true will prompt a selection window to choose config file."},{"path":[]},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/analysis.html","id":"hosts","dir":"Articles","previous_headings":"Parameters","what":"Hosts","title":"Mapping habitat connectivity with geohabnet","text":"library supports spatial raster file (e.g. TIFF). case studies done crop data Monfreda(Monfreda, Ramankutty, Foley 2008) Mapspam(International Food Policy Research Institute 2019) available via geodata package (geodata2025?)","code":"results <- sensitivity_analysis() #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> |---------|---------|---------|---------|====                                           #> Warning: [+] CRS do not match #> |---------|---------|---------|---------|=======                                           #> Warning: [+] CRS do not match #> |---------|---------|---------|---------|==========                                           #> Warning: [+] CRS do not match #> |---------|---------|---------|---------|====                                           #> Warning: [+] CRS do not match"},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/analysis.html","id":"thresholds","dir":"Articles","previous_headings":"Parameters","what":"Thresholds","title":"Mapping habitat connectivity with geohabnet","text":"Thresholds used select subset values SpatRaster operations applied. directly effects connectivity gives sense sensitivity network. intermediate goal produce adjacency graph essentially determines connectivity. Cells doesn’t meet threshold removed consideration dispersal models.","code":"risk_indexes <- msean(avocado_sp, global = FALSE, hd_threshold = 0.0001, link_threshold = 0.001) #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> |---------|---------|---------|---------|===                                           #> Warning: [+] CRS do not match #> |---------|---------|---------|---------|==                                           #> Warning: [+] CRS do not match #> |---------|---------|---------|---------|==                                           #> Warning: [+] CRS do not match"},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/analysis.html","id":"density-thresholds","dir":"Articles","previous_headings":"Parameters > Thresholds","what":"Density Thresholds","title":"Mapping habitat connectivity with geohabnet","text":"host density threshold. host density threshold minimum cropland proportion grid cells (locations) included analysis. parameter called HostDensityThreshold supports list values 0 1. running sensitivity_analysis() function, check values host density threshold smaller maximum host density map prevent errors. values rounded 5 decimal points.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/analysis.html","id":"link-thresholds","dir":"Articles","previous_headings":"Parameters > Thresholds","what":"Link Thresholds","title":"Mapping habitat connectivity with geohabnet","text":"Based information host distribution dispersal kernels, adjacency matrices created, entries likelihood pathogen movement locations. , adjacency matrices converted graph objects perform network analysis, entries adjacency matrices now weight links network. Choosing link weight thresholds helps focus analysis likely pathogen dispersal landscape. Like host density threshold, can provide list positive values LinkThreshold. running sensitivity_analysis() function, check values link weight threshold smaller maximum link weight network prevent errors.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/analysis.html","id":"aggregation","dir":"Articles","previous_headings":"Parameters","what":"Aggregation","title":"Mapping habitat connectivity with geohabnet","text":"Aggregation strategy refers function used create new map host density lower resolution (larger cells). Reducing spatial resolution helps reduce computational power needed run analysis. AggregationStrategy: [sum], sum cropland proportion initially small grids within large grid divided total number initially small grids within large grid. AggregationStrategy: [mean], sum cropland proportion initially small grids within large grid divided total number initially small grids containing land (small grids water excluded) within large grid. default, analysis run can opted one. one method used, difference map skipped outcome.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/analysis.html","id":"distance-methods","dir":"Articles","previous_headings":"Parameters","what":"Distance methods","title":"Mapping habitat connectivity with geohabnet","text":"pair locations host map values greater host density threshold, sensitivity_analysis() function calculate physical distances use calculate relative likelihood pathogen movement locations based pairwise geographical proximity. two different options calculate distance locations. · Vincenty ellipsoid distance option highly accurate computationally expensive. · Geodesic distance option less computationally expensive less accurate option . can set distance option either DistanceStrategy: “vincentyEllipsoid” DistanceStrategy: “geodesic”. One options used input run analysis. Check supported methods analysis running dist_methods() console.","code":"dist_methods() #> [1] \"geodesic\"          \"vincentyellipsoid\""},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/analysis.html","id":"resolution","dir":"Articles","previous_headings":"Parameters","what":"Resolution","title":"Mapping habitat connectivity with geohabnet","text":"aggregation factor granularity number small grid cells aggregated larger grid cells direction (horizontally vertically). finest value 1 can require analysis run hours large number cells SpatRaster . resolution also used calculation variance dis-aggregating risk indices coarser resolution producing maps. provided, defaulted value selected reso()","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/analysis.html","id":"metrics","dir":"Articles","previous_headings":"Parameters","what":"Metrics","title":"Mapping habitat connectivity with geohabnet","text":"See available metrics using Metrics corresponding dispersal models applied distance matrix specified weights. weights must specified % sum weights equal 100. use functions (Csardi Nepusz 2006) calculate metrics dispersal model. 2 dispersal models applied parameters inverse power law negative exponential. formally, metrics way determine connectivity among nodes network. graph functions (Csardi Nepusz 2006), links interpreted distances. However, context habitat connectivity, network adapted interpret links weights means likelihood pathogen spread lower distance larger.$$ L = \\frac{1}{W}, \\\\ W' = \\sum_{=1}^{N} \\max(W - W_i) $$ L link weights W original weights undirected graph. W’ transformed weight vector calculating network centrality.","code":"supported_metrics() #> [1] \"betweeness\"               \"node_strength\"            #> [3] \"sum_of_nearest_neighbors\" \"eigenvector_centrality\"   #> [5] \"closeness\"                \"degree\"                   #> [7] \"page_rank\""},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/analysis.html","id":"geographical-extent","dir":"Articles","previous_headings":"Parameters","what":"Geographical Extent","title":"Mapping habitat connectivity with geohabnet","text":"Geographical extent subset world map defined coordinate reference system. corresponding parameter set area sean() sensitivity_analyis() geoscale GeoExtent respectively. Default setting global = TRUE ignore value geoscale. consider taking world map account using values global_scales() . non-global analysis, either set global = FALSE without setting geoscale. default, geoscale extracted extents input SpatRaster. recommend using EPSG:4326 coordinate reference system functions tested . Using function    Using config Set Global = FALSE CustomExt = [-115, -75, 5, 32] . initial parameters.yaml already contains value run combination parameters. provided geoscale, program take subset provided raster (data-set crop). workflow apply graph operations network connectivity subset.","code":"results <- msean(avocado_sp, global = FALSE, geoscale = c(-115, -75, 5, 32)) #> Warning: [+] CRS do not match #> Warning: [+] CRS do not match #> Warning: [+] CRS do not match"},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/analysis.html","id":"outputs","dir":"Articles","previous_headings":"","what":"Outputs","title":"Mapping habitat connectivity with geohabnet","text":"default, 3 maps produced analysis. sean() also returns risk indices without maps can, fed connectivity() . flexibility supposed allow users use risk indices purposes use function produce maps different parameters. code , obtaining results, maps produced. order calculate variance, cells SpatRaster extended coarser value using res parameter. Setting maps = FALSE suppress calculation outputs. sean(avocado) + .connectivity(georast) equivalent sensitivity_analysis() msean() produces maps side effect. user function equivalent connectivity() accepts primitives types instead S4 class.    Based result obtained last cell, let’s navigate object final object. noticed maps side effect ’s really whole point. See result summary simply calling final object navigate using standard S4 classes approach. final operations performed risk indices 3 results produced - Mean mean SpatRasters resulting combination parameter values. values cells added across indices divided number indices. represents connectivity based host density given area. Navigating resulting object - Variance Uses stats::var risk indices, subset extracted provided scale finally pixels dis-aggregated using factor = resolution value original parameter previous step. Difference aggregation methods (sum mean) selected, difference calculated rank matrices essentially numeric cells risk indices type SpatRaster. result dis-aggregated way previous step.  path saved raster can accessed using ‘type_out’ slot. Additionally, access risk indices ’s corresponding adjacency accessible within slots GeoNetwork class. Checkout adjacency matrices running code - Set pmean, pvar, pdiff FALSE skip calculation connectivity() skip calculation. sean() sensitivity_analysis(), set map = FALSE skip generation maps outcome. case global analysis, result eastern western geographic extents merged using terra::merge() . outcome operation saved new directory plots specified path OutDir name opt_datetime.tif, opt one suffixed datetime file created. outdir empty, value defaulted tempdir() . applies corresponding parameter outdir functions.","code":"final <- msean(avocado_sp, link_threshold = 0.0001, hd_threshold = 0.0025) #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> Warning in max(wv, na.rm = TRUE): no non-missing arguments to max; returning #> -Inf #> |---------|---------|---------|---------|====                                           #> Warning: [+] CRS do not match #> |---------|---------|---------|---------|======                                           #> Warning: [+] CRS do not match #> |---------|---------|---------|---------|==========                                           #> Warning: [+] CRS do not match #> |---------|---------|---------|---------|====                                           #> Warning: [+] CRS do not match # checkout the type of an object class(final) #> [1] \"GeoNetwork\" #> attr(,\"package\") #> [1] \"geohabnet\" final #> class            :  GeoNetwork  #> habitat density     :  98 , 267  (nrow, ncol) SpatRaster  #> mean             :  /var/folders/r5/zggvft9d3yn5kh51wqp78rd00000gn/T//Rtmprp11dF/plots/mean_20251017004248904906.tif  #> mean raster      :  1176 , 3204  (nrow, ncol)  #> variance          :  /var/folders/r5/zggvft9d3yn5kh51wqp78rd00000gn/T//Rtmprp11dF/plots/variance_2025101700424982942.tif  #> variance raster   :  1176 , 3204  (nrow, ncol)  #> difference        :  /var/folders/r5/zggvft9d3yn5kh51wqp78rd00000gn/T//Rtmprp11dF/plots/difference_20251017004250492381.tif  #> difference raster :  1176 , 3204  (nrow, ncol) gplot(final@me_rast) gplot(final@var_rast) gplot(final@diff_rast) # checkout the results final@rasters #> class   :  GeoRasters  #> global  :  TRUE  #> globals :  1  # global is TRUE because we original set the global analysis # thus, we will have set of 2 risk indices, eastern and wetern hemisphere final@rasters$global_rast #> [[1]] #> class :  GlobalRast  #> east  :  14  #> west  :  14  # Number of elements from above determines the the number of parameter values provided  # To access the adjacency matrix, final@rasters$global_rast[[1]]$east[[1]] # this is also s4 class 'GeoModel' #> class            :  GeoModel  #> adjacency matrix :  1 ,  1  (nrow, ncol)  #> risk index       :  98 ,  170  (nrow, ncol) # replace the indexing with any arbitary index, # uncomment line below to see the results.  #final@rasters$global_rast[[1]]$east[[1]]$amatrix"},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/analysis.html","id":"computing","dir":"Articles","previous_headings":"","what":"Computing","title":"Mapping habitat connectivity with geohabnet","text":"understand motivation behind implementation, let’s analyze complexity. Since link host density threshold list, let size N. kernel models, let’s represent metrics dispersal coefficients x 4 reprectively. overall complexity turns N⋅N⋅(7X+7Y)N \\cdot N \\cdot (7X + 7Y) . , assumed availability host density. Although, crop data fetched parallel minimize download time. Considering X=max(X,Y)X = max(X, Y) , complexity now T=7N2X2≈7N4T = 7N^2 X^2 \\approx 7N^4. discount complexity graph operations like centrality scores haven’t attempted optimize operations. try optimize performance scaling fixed problem size, increasing parallelism. operations compute intensive. run_msean snippet Hosts used 8.3GB memory 81% memory allotted RStudio. part, implementation focused performance efficient memory usage. Package applies mechanisms vectorization foreach improve performance efficiency. workflow several parts running independently. independent functions performs operations adjacency matrix aggregation. created opportunity task level parallelism running functions within geohabnet. combination parameters can run independently parallel parts using future mechanism. implementation supports workflow acceleration using (Bengtsson 2021a, 2021b) . also important note use SpatRaster object throughout computation. SpatRaster external pointer C++ rather R object thus adds overhead conversion, neutralizing performance gains.","code":"#avocado <- geohabnet::cropharvest_rast(\"avocado\", \"monfreda\")  # see ?future::plan for details future::plan(future::multicore()) msean(avocado_sp)  future::plan(future::multisession()) msean(avocado_sp)"},{"path":[]},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/user_guide.html","id":"installation-and-pre-requisites","dir":"Articles","previous_headings":"","what":"Installation and pre-requisites","title":"User guide","text":"geohabnet R package can directly installed loaded RStudio using following commands. stable version published CRAN: version 2.2 available CRAN latest development version available GitHub: version available GitHub repository either case, user prompted update dependencies R packages installation RStudio. recommend updating package dependencies. dependencies geohabnet package minimum versions required can accessed following code: Note desc::desc() function external package requires installation use. Now, package can loaded current R environment.","code":"install.packages(\"geohabnet\") install.packages(\"devtools\") devtools::install_github(\"GarrettLab/CroplandConnectivity\", subdir = \"geohabnet\") desc::desc(package = \"geohabnet\") library(geohabnet)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/user_guide.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"User guide","text":"landing page documentation can accessed using ?geohabnet. guide written geohabnet v2.2 (Keshav, Plex, Garrett 2025), available download CRAN GitHub. help page functions can accessed ?geohabnet::fun help(geohabnet::fun), fun needs changed name function interest. example, ?geohabnet::msean() simply ?msean provide documentation function msean(). v2.2 provides two main functions estimate map connectivity locations habitat present (hereafter, habitat connectivity): sensitivity_analysis() msean(). package also offers supplementary functions, covered user guide. running function, please review description parameter . Well, ten parameters can used either sensitivity_analysis() msean(). parameters msean() can modified directly within function RStudio, common many R packages. sensitivity_analysis() requires list parameters, providing organized way easily change default parameter values without listing every time. list parameters sensitivity_analysis() called Parameters.yaml. following steps allow access Parameters.yaml file, specify parameter values, use analysis sensitivity_analysis(): can get Parameters.yaml file running geohabnet::get_parameters() specifying location file saved. Use iwindow = TRUE interactive selection provide absolute file path parameter out_path non-interactive use. example, Plex ran following: Open Parameters.yaml file program allows edit (outside RStudio). Please alter structure yaml file parameter names ensure successfully compatible sensitivity_analysis(). Except host, file contain default acceptable values supported parameters (see picture ). Manually modify add values Parameters.yaml file save . Feed new Parameters.yaml file package using geohabnet::set_parameters() return TRUE parameters set successfully. example, Plex ran following: Now can run sensitivity_analysis() produce maps habitat connectivity.","code":"get_parameters(out_path = \"C:/Users/plexaaron/Documents\") set_parameters(new_params = \"C:/Users/plexaaron/Documents/parameters.yaml\")"},{"path":[]},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/user_guide.html","id":"providing-habitat-distribution","dir":"Articles","previous_headings":"Setting parameters in sensitivity_analysis() and msean()","what":"1. Providing habitat distribution","title":"User guide","text":"Users can provide type habitat map compatible terra:rast() function (Hijmans 2023). Typically, TIFF file standard geographic coordinate system (WGS84). Acceptable entries SpatRaster range zero (habitat available location) one (location fully covered habitat species). Host availability important component habitat quality plant pathogens. , provide two ways providing maps host availability geohabnet. first one based data sources global distribution crop hosts, latter intended using data. • **data*. geohabnet package designed accept raster files inputs distribution habitat availability. can provide raster file two ways: use sensitivity_analysis(), can set file parameter Host absolute path raster file (see example figure ). use msean(), user required read habitat map directly R. example: • Monfreda Dataset (Monfreda, Ramankutty, Foley 2008) . Database provides information geographic distribution 172 crop categories. maps can used first approximation habitat quality plant pests. can access data directly R using geodata package. Run geodata::monfredaCrops() console check crops available Monfreda. can use SpatRaster crop interest geohabnet following code: Alternatively, can access Monfreda downloading crop distribution maps EarthStat . can provide location downloaded TIFF file parameters.yaml file using sensitivity_analysis(). • MAPSPAM dataset (International Food Policy Research Institute 2019). provides information global distribution 42 crops crop groups (IFPRI 2019). may want use harvested area physical area analysis habitat connectivity geohabnet: can access data-set R using geodata package. Run geodata::spamCrops() console check crops available MAPSPAM. can use SpatRaster crop interest geohabnet following code: Note convert physical area crop availability hectares fraction total area occupied crop. conv.factor estimates total area grid cell hectares. Alternatively, can access data-set downloading crop distribution maps MAPSPAM. Note newer versions available geodata package (Hijmans et al. 2024), October 17, 2025. • may prefer analysis based Monfreda MAPSPAM database. case, may first get spatRaster host density target crop category data-set average generate SpatRaster mean host availability. Another situation need add different crop categories SpatRaster habitat species ranges across multiple crop species.","code":"hab.rast <- terra::rast(\"habitat-map-example.tif\") library(geodata) hab.rast <- crop_monfreda(crop = \"banana\", var = \"area_f\", path = tempdir()) library(geohabnet) msean(rast = hab.rast) library(geodata) hab.rast <- crop_spam(crop = \"banana\", var = \"phys_area\", path = tempdir() conv.factor <- res(hab.rast)[1]*111000 * res(hab.rast)[1]*111000 / 10000 hab.rast <- hab.rast$banana_phys_area_all / conv.factor library(geohabnet) msean(rast = hab.rast)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/articles/user_guide.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"User guide","text":"Garrett Lab, University Florida","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Krishna Keshav. Author, maintainer. Aaron Plex. Author. Garrett Lab. Contributor.           https://garrettlab.com Karen Garrett. Author. University Florida. Copyright holder, funder.           https://www.ufl.edu","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Keshav K, Plex , Garrett K (2025). geohabnet: Geographical Risk Analysis Based Habitat Connectivity. R package version 2.2, https://garrettlab.github.io/HabitatConnectivity/.","code":"@Manual{,   title = {geohabnet: Geographical Risk Analysis Based on Habitat Connectivity},   author = {Krishna Keshav and Aaron Plex and Karen Garrett},   year = {2025},   note = {R package version 2.2},   url = {https://garrettlab.github.io/HabitatConnectivity/}, }"},{"path":"https://garrettlab.github.io/HabitatConnectivity/index.html","id":"geohabnet","dir":"","previous_headings":"","what":"Geographical Risk Analysis Based on Habitat Connectivity","title":"Geographical Risk Analysis Based on Habitat Connectivity","text":"package expands Xing et al (2021) doi:10.1093/biosci/biaa067. adds capabilities customize parameter values using functions shows results habitat connectivity risk index form plots. goal geohabnet enable users visualize habitat connectivity risk index using parameter values. risk analysis outputs 3 maps - Mean habitat connectivity (based habitat connectivity index defined user) Difference habitat connectivity Variance habitat connectivity package currently supports crop maps sourced geodata::monfredaCrops() geodata::spamCrops(). analysis produces 3 maps listed . multiple ways functions can used - generate final outcome intermediate outcomes sophisticated use cases. vignettes provide several examples. output values propagated functions performing operations distance matrix calculation. values set parameters.yaml can accessed using get_parameters(). See usage .","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Geographical Risk Analysis Based on Habitat Connectivity","text":"Package can either installed CRAN: source version package can installed GitHub :","code":"install.packages(\"geohabnet\") #> Installing package into '/private/var/folders/r5/zggvft9d3yn5kh51wqp78rd00000gn/T/Rtmpk04dwi/temp_libpath644e7beb8e10' #> (as 'lib' is unspecified) #> Warning: package 'geohabnet' is not available for this version of R #>  #> A version of this package for your version of R might be available elsewhere, #> see the ideas at #> https://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages if (!require(\"devtools\")) {   install.packages(\"devtools\") }  devtools::install_github(\"GarrettLab/HabitatConnectivity\", subdir = \"geohabnet\")"},{"path":"https://garrettlab.github.io/HabitatConnectivity/index.html","id":"geohabnet-example","dir":"","previous_headings":"","what":"geohabnet Example","title":"Geographical Risk Analysis Based on Habitat Connectivity","text":"Run analysis using - parameters.yaml stores parameter values. can accessed set using get_parameters() set_parameters() respectively. default risk analysis run global index, scales present global_scales() . Refer help using ?geohabnet::fun help(geohabnet::fun) Refer article Analyzing risk index using cropland connectivity elaborate description usages functions package.","code":"library(geohabnet)  param_file <- geohabnet::get_parameters() # now edit the file geohabnet::set_parameters(new_params = param_file) geohabnet::sensitivity_analysis()"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/Dispersal-kernels.html","id":null,"dir":"Reference","previous_headings":"","what":"Dispersal kernels — inv_powerlaw","title":"Dispersal kernels — inv_powerlaw","text":"-[inv_powerlaw()] Get parameters values pertaining inverse power law model. -[neg_exp()] Get parameters values pertaining negative exponential model.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/Dispersal-kernels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dispersal kernels — inv_powerlaw","text":"","code":"inv_powerlaw(   params = load_parameters(),   betas = NULL,   mets = NULL,   we = NULL,   linkcutoff = NULL )  neg_expo(   params = load_parameters(),   gammas = NULL,   mets = NULL,   we = NULL,   linkcutoff = NULL )"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/Dispersal-kernels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dispersal kernels — inv_powerlaw","text":"params Object. function uses parameter values defined load_parameters() default. load_parameters() provided, function require user specify arguments listed . load_parameters() values arguments listed provided, load_parameters() takes precedence specified arguments. betas Numeric. Beta dispersal parameter used inverse power law estimate species' dispersal gradient. Please refer Mundt et al (2009) details calculate parameter. beta values positive. Smaller beta values indicate higher likelihood dispersal nodes. mets Character. seven network metrics supported geohabnet:  \"node_strength\", \"sum_of_nearest_neighbors\", \"eigenvector_centrality\", \"closeness\", \"betweeness\", \"degree\", \"page_rank\". specified network metric calculated location target region, based link weights pair locations. Run, example, pagerank() details network metric. Numeric. parameter indicates weight(s) specified network metric, representing importance network metric analysis. Since weights represent percentages, weight(s) 0 100, sum specified weights 100. linkcutoff Numeric. parameter used calculate betweeness() closeness(), equivalent cutoff functions igraph package. gammas Numeric. Gamma dispersal parameter used negative exponential estimate species' dispersal gradient. gamma values positive. Smaller gamma values indicate higher likelihood dispersal nodes.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/Dispersal-kernels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dispersal kernels — inv_powerlaw","text":"List parameters values. See details.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/Dispersal-kernels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dispersal kernels — inv_powerlaw","text":"Refer Esker et al (2007) discussion characteristics dispersal gradient kernel model (.e., inverse power law negative exponential). resulting object produced load_parameters() provides following values used running analysis -beta dispersal parameter calculating inverse power law model. -gamma dispersal parameter calculating negative exponential model. -metrics network metric applied adjacency matrix produced intermediate step. -weights link weights used network analysis. -cutoff Currently used parameter calculate two types node centrality - betweeness() closeness(). defined igraph::betweenness(), cutoff refers maximum length consider calculating centrality. zero negative, limit.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/Dispersal-kernels.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dispersal kernels — inv_powerlaw","text":"Esker PD, Sparks AH, Antony G, Bates M, Dall' Acqua W, Frank EE, Huebel L, Segovia V, Garrett KA (2007). “Ecology Epidemiology R: Modeling dispersal gradients.” Plant Health Instructor. doi:10.1094/PHI--2008-0129-03 Mundt CC, Sackett KE, Wallace LD, Cowger C, Dudley JP  (2009). “Aerial Dispersal Multiple-Scale Spread Epidemic Disease.” Ecohealth. doi:10.1007/s10393-009-0251-z Csardi G, Nepusz T (2006). “igraph software package complex network research.” InterJournal, Complex Systems, 1695. https://igraph.org. Csárdi G, Nepusz T, Traag V, Horvát Sz, Zanini F, Noom D, Müller K (2024). igraph: Network Analysis Visualization R. doi:10.5281/zenodo.7682609 , R package version 1.5.1, https://CRAN.R-project.org/package=igraph.","code":""},{"path":[]},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/GeoModel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"GeoModel class — GeoModel-class","title":"GeoModel class — GeoModel-class","text":"reference class represent results dispersal models.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/GeoModel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"GeoModel class — GeoModel-class","text":"amatrix square adjacency matrix represents likely movement species locations. adjacency matrix, rows columns identification locations, entry indicates relative likelihood species moving pair locations. adjacency matrix produced unique value dispersal parameters chosen. index raster object representing habitat connectivity index locations selected region. Note connectivity calculated based weighted sum network metrics chosen user. raster object produced unique value dispersal parameters chosen. hdthreshold numeric value representing threshold habitat availability (e.g., cropland density host density) used sensitivity analysis. aggregation character value representing spatial aggregation method used aggregating habitat availability map conducting sensitivity analysis. linkthreshold numeric value representing threshold link weights used calculate habitat connectivity location. Note link weights indicate relative likelihood species moving locations (nodes) correspond entries adjacency matrix. beta numeric value representing beta parameter. beta parameter dispersal parameter one two dispersal kernel models (inverse power law model) included geohabnet. gamma numeric value representing gamma parameter. gamma parameter dispersal parameter one two dispersal kernel models (negative exponential model) included geohabnet.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/GeoNetwork-class.html","id":null,"dir":"Reference","previous_headings":"","what":"GeoNetwork — GeoNetwork-class","title":"GeoNetwork — GeoNetwork-class","text":"S4 class object multiple components resulting geographical habitat network analysis. GeoNetwork object wrap results habitat connectivity analysis using sean() sensitivity_analysis(). Specifically, class contains field Gmap class, results habitat connectivity analysis form SpatRaster TIFF file.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/GeoNetwork-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GeoNetwork — GeoNetwork-class","text":"","code":"# S4 method for class 'GeoNetwork' habitat_density(x) <- value"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/GeoNetwork-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GeoNetwork — GeoNetwork-class","text":"x GeoNetwork. value SpatRaster.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/GeoNetwork-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GeoNetwork — GeoNetwork-class","text":"GeoNetwork.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/GeoNetwork-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"GeoNetwork — GeoNetwork-class","text":"rasters list GeoRasters objects. habitat_density SpatRaster representing habitat availability (simply host density) used input habitat connectivity analysis. me_rast SpatRaster representing mean habitat connectivity region. mean calculated based sensitivity analysis across user-specified dispersal parameters. me_out Character. file path mean habitat connectivity raster saved. diff_rast SpatRaster representing difference ranks mean habitat connectivity user-supplied map habitat availability. diff_out Character. file path difference raster saved. var_rast SpatRaster representing variance habitat connectivity region. variance calculated based sensitivity analysis across user-specified dispersal parameters. var_out Character. file path variance raster saved.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/GeoRasters-class.html","id":null,"dir":"Reference","previous_headings":"","what":"GeoRaster class — GeoRasters-class","title":"GeoRaster class — GeoRasters-class","text":"class represent raster vis--vis risk indices. class encapsulates results apply dispersal models metrics.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/GeoRasters-class.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"GeoRaster class — GeoRasters-class","text":"host_density SpatRaster. spatial raster representing host density. rasters List. List raster representing risk indices. type GeoModels. global Boolean. True contains GlobalRast object, False otherwise.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/GlobalRast-class.html","id":null,"dir":"Reference","previous_headings":"","what":"GlobalRast class — GlobalRast-class","title":"GlobalRast class — GlobalRast-class","text":"class represent raster objects global scales. Global scales accessible using global_scales(). However, class encapsulates results apply dispersal models metrics.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/GlobalRast-class.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"GlobalRast class — GlobalRast-class","text":"east list raster objects eastern hemisphere. west list raster objects western hemisphere.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/Gmap-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Gmap class — Gmap-class","title":"Gmap class — Gmap-class","text":"S4 class organize various maps form SpatRaster single object.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/Gmap-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gmap class — Gmap-class","text":"","code":"setmaps(x, me, vari, dif)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/Gmap-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gmap class — Gmap-class","text":"x Gmap object. SpatRaster. raster used background plotting map mean habitat connectivity. vari SpatRaster. raster used background plotting map variance habitat connectivity. dif SpatRaster. raster used background plotting map difference habitat connectivity habitat availability.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/Gmap-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gmap class — Gmap-class","text":"Gmap object.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/Gmap-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Gmap class — Gmap-class","text":"me_rast raster object representing habitat connectivity region averaged across selected parameters. me_out Character. file path mean habitat connectivity saved. diff_rast raster object representing difference ranks mean habitat connectivity habitat availability region. diff_out Character. file path difference raster saved. var_rast raster object representing variance habitat connectivity region calculated across specified parameters. var_out Character. file path variance raster saved.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/RiskMap-class.html","id":null,"dir":"Reference","previous_headings":"","what":"RiskMap class — RiskMap-class","title":"RiskMap class — RiskMap-class","text":"S4 class representing resulting maps specific operation type.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/RiskMap-class.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"RiskMap class — RiskMap-class","text":"map Character. file path map. riid SpatRaster. one maps habitat connectivity. spr SpatRaster. spatial raster representing habitat connectivity index. fp Character. file path habitat connectivity raster.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_BETWEENNESS.html","id":null,"dir":"Reference","previous_headings":"","what":"global variable containing string. Not intended to modify. — STR_BETWEENNESS","title":"global variable containing string. Not intended to modify. — STR_BETWEENNESS","text":"global variable containing string. intended modify.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_BETWEENNESS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"global variable containing string. Not intended to modify. — STR_BETWEENNESS","text":"","code":"STR_BETWEENNESS"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_BETWEENNESS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"global variable containing string. Not intended to modify. — STR_BETWEENNESS","text":"object class character length 1.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_CLOSENESS_CENTRALITY.html","id":null,"dir":"Reference","previous_headings":"","what":"global variable containing string. Not intended to modify. — STR_CLOSENESS_CENTRALITY","title":"global variable containing string. Not intended to modify. — STR_CLOSENESS_CENTRALITY","text":"global variable containing string. intended modify.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_CLOSENESS_CENTRALITY.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"global variable containing string. Not intended to modify. — STR_CLOSENESS_CENTRALITY","text":"","code":"STR_CLOSENESS_CENTRALITY"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_CLOSENESS_CENTRALITY.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"global variable containing string. Not intended to modify. — STR_CLOSENESS_CENTRALITY","text":"object class character length 1.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_DEGREE.html","id":null,"dir":"Reference","previous_headings":"","what":"global variable containing string. Not intended to modify. — STR_DEGREE","title":"global variable containing string. Not intended to modify. — STR_DEGREE","text":"global variable containing string. intended modify.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_DEGREE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"global variable containing string. Not intended to modify. — STR_DEGREE","text":"","code":"STR_DEGREE"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_DEGREE.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"global variable containing string. Not intended to modify. — STR_DEGREE","text":"object class character length 1.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_DISTANCE_MATRIX.html","id":null,"dir":"Reference","previous_headings":"","what":"global variable containing string. Not intended to modify. — STR_DISTANCE_MATRIX","title":"global variable containing string. Not intended to modify. — STR_DISTANCE_MATRIX","text":"global variable containing string. intended modify.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_DISTANCE_MATRIX.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"global variable containing string. Not intended to modify. — STR_DISTANCE_MATRIX","text":"","code":"STR_DISTANCE_MATRIX"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_DISTANCE_MATRIX.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"global variable containing string. Not intended to modify. — STR_DISTANCE_MATRIX","text":"object class character length 1.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_EAST.html","id":null,"dir":"Reference","previous_headings":"","what":"global variable containing string. Not intended to modify. — STR_EAST","title":"global variable containing string. Not intended to modify. — STR_EAST","text":"global variable containing string. intended modify.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_EAST.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"global variable containing string. Not intended to modify. — STR_EAST","text":"","code":"STR_EAST"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_EAST.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"global variable containing string. Not intended to modify. — STR_EAST","text":"object class character length 1.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_EIGEN_VECTOR_CENTRALITY.html","id":null,"dir":"Reference","previous_headings":"","what":"global variable containing string. Not intended to modify. — STR_EIGEN_VECTOR_CENTRALITY","title":"global variable containing string. Not intended to modify. — STR_EIGEN_VECTOR_CENTRALITY","text":"global variable containing string. intended modify.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_EIGEN_VECTOR_CENTRALITY.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"global variable containing string. Not intended to modify. — STR_EIGEN_VECTOR_CENTRALITY","text":"","code":"STR_EIGEN_VECTOR_CENTRALITY"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_EIGEN_VECTOR_CENTRALITY.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"global variable containing string. Not intended to modify. — STR_EIGEN_VECTOR_CENTRALITY","text":"object class character length 1.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_NEAREST_NEIGHBORS_SUM.html","id":null,"dir":"Reference","previous_headings":"","what":"global variable containing string. Not intended to modify. — STR_NEAREST_NEIGHBORS_SUM","title":"global variable containing string. Not intended to modify. — STR_NEAREST_NEIGHBORS_SUM","text":"global variable containing string. intended modify.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_NEAREST_NEIGHBORS_SUM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"global variable containing string. Not intended to modify. — STR_NEAREST_NEIGHBORS_SUM","text":"","code":"STR_NEAREST_NEIGHBORS_SUM"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_NEAREST_NEIGHBORS_SUM.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"global variable containing string. Not intended to modify. — STR_NEAREST_NEIGHBORS_SUM","text":"object class character length 1.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_NODE_STRENGTH.html","id":null,"dir":"Reference","previous_headings":"","what":"global variable containing string. Not intended to modify. — STR_NODE_STRENGTH","title":"global variable containing string. Not intended to modify. — STR_NODE_STRENGTH","text":"global variable containing string. intended modify.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_NODE_STRENGTH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"global variable containing string. Not intended to modify. — STR_NODE_STRENGTH","text":"","code":"STR_NODE_STRENGTH"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_NODE_STRENGTH.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"global variable containing string. Not intended to modify. — STR_NODE_STRENGTH","text":"object class character length 1.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_PAGE_RANK.html","id":null,"dir":"Reference","previous_headings":"","what":"global variable containing string. Not intended to modify. — STR_PAGE_RANK","title":"global variable containing string. Not intended to modify. — STR_PAGE_RANK","text":"global variable containing string. intended modify.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_PAGE_RANK.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"global variable containing string. Not intended to modify. — STR_PAGE_RANK","text":"","code":"STR_PAGE_RANK"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_PAGE_RANK.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"global variable containing string. Not intended to modify. — STR_PAGE_RANK","text":"object class character length 1.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_WEST.html","id":null,"dir":"Reference","previous_headings":"","what":"global variable containing string. Not intended to modify. — STR_WEST","title":"global variable containing string. Not intended to modify. — STR_WEST","text":"global variable containing string. intended modify.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_WEST.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"global variable containing string. Not intended to modify. — STR_WEST","text":"","code":"STR_WEST"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/STR_WEST.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"global variable containing string. Not intended to modify. — STR_WEST","text":"object class character length 1.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/ccri_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate difference map — ccri_diff","title":"Calculate difference map — ccri_diff","text":"function produces map difference b/w mean sum indexes rank cropland harvested area fraction.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/ccri_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate difference map — ccri_diff","text":"","code":"ccri_diff(x, y, global, geoscale, res = reso(), outdir = tempdir())"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/ccri_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate difference map — ccri_diff","text":"x SpatRaster. y SpatRaster. global Logical. TRUE global analysis desired, FALSE otherwise. east west required TRUE. geoscale Numeric vector. x cropped extent. res Numeric. Map resolution. value used aggregation dis-aggregation operation. Default reso(). outdir Character. Output directory saving raster TIFF format. Default tempdir().","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/ccri_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate difference map — ccri_diff","text":"RiskMap. Contains result form SpatRaster objects file path saved maps.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/ccri_diff.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate difference map — ccri_diff","text":"Ideally, function tested yield desired results length((y[] > 0)) > length((x[] > 0)).","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/ccri_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate mean of raster objects — ccri_mean","title":"Calculate mean of raster objects — ccri_mean","text":"Wrapper terra::mean(). Calculates mean list rasters.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/ccri_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate mean of raster objects — ccri_mean","text":"","code":"ccri_mean(   indices,   global = FALSE,   east = NULL,   west = NULL,   geoscale = NULL,   res = reso(),   plt = TRUE,   outdir = tempdir() )"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/ccri_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate mean of raster objects — ccri_mean","text":"indices List SpatRasters. input represents spatial raster collection mean calculated. global Logical. TRUE global analysis desired, FALSE otherwise. east west required TRUE. east SpatRaster. Collection risk indices eastern extent. west SpatRaster. Collection risk indices western extent. TRUE, geoscale ignored. Default TRUE. geoscale Vector. geographical scale. Default NULL. res Numeric. Map resolution. value used aggregation dis-aggregation operation. Default reso(). plt TRUE need plot mean map, FALSE otherwise. outdir Character. Output directory saving raster TIFF format. Default tempdir().","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/ccri_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate mean of raster objects — ccri_mean","text":"RiskMap. Contains result form SpatRaster objects file path saved maps.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/ccri_variance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate variance of CCRI — ccri_variance","title":"Calculate variance of CCRI — ccri_variance","text":"function produces map variance CCRI based input parameters","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/ccri_variance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate variance of CCRI — ccri_variance","text":"","code":"ccri_variance(   indices,   rast,   global,   east = NULL,   west = NULL,   geoscale,   res = reso(),   outdir = tempdir() )"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/ccri_variance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate variance of CCRI — ccri_variance","text":"indices SpatRaster. Collection risk indices. rast SpatRaster. Template variance output global Logical. TRUE global analysis desired, FALSE otherwise. east west required TRUE. east SpatRaster. Collection risk indices eastern extent. west SpatRaster. Collection risk indices western extent. TRUE, geoscale ignored. Default TRUE. geoscale Vector. geographical scale. Default NULL. res Numeric. Map resolution. value used aggregation dis-aggregation operation. Default reso(). outdir Character. Output directory saving raster TIFF format. Default tempdir().","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/ccri_variance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate variance of CCRI — ccri_variance","text":"RiskMap. Contains result form SpatRaster objects file path saved maps.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/connectivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and plot maps of habitat connectivity — connectivity","title":"Calculate and plot maps of habitat connectivity — connectivity","text":"Calculate mean habitat connectivity across set selected parameters, variance habitat connectivity, difference ranks mean habitat connectivity habitat availability. result produced form maps plotted predefined graphics settings. Currently, settings plot customized. Default value TRUE logical arguments","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/connectivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and plot maps of habitat connectivity — connectivity","text":"","code":"connectivity(   host,   indices,   global = FALSE,   east = NULL,   west = NULL,   geoscale = NULL,   res = reso(),   pmean = TRUE,   pvar = TRUE,   pdiff = TRUE,   outdir = tempdir() )"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/connectivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and plot maps of habitat connectivity — connectivity","text":"host SpatRaster. SpatRaster object spatial distribution habitat availability (host availability cropland density). Note valid input data geohabnet raster layer habitat availability (host availability), grid cell values zero one. using dataset, please also make sure raster layer standard coordinate reference system (.e., EPSG:4326), CRS supported geohabnet now. indices SpatRaster. Collection risk indices. global Logical. Select TRUE global analysis desired, FALSE otherwise. east west required TRUE. east SpatRaster. Collection risk indices eastern extent. west SpatRaster. Collection risk indices western extent. TRUE, geoscale ignored. Default TRUE. geoscale Vector. refers geographical extent habitat connectivity analysis global set FALSE. Default NULL. res Numeric. parameter refers spatial aggregation factor. value number cells grouped aggregating raster layer fine coarse spatial resolution reduce computational costs. Setting parameter 1 aggregate raster layers. Default reso(). pmean Logical. TRUE map mean habitat connectivity plotted, FALSE otherwise. pvar Logical. TRUE map variance habitat connectivity plotted, FALSE otherwise. pdiff Logical. TRUE map difference ranks mean habitat connectivity habitat availability plotted, FALSE otherwise. outdir Character. Output directory saving raster TIFF format. Default tempdir().","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/connectivity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and plot maps of habitat connectivity — connectivity","text":"Gmap. See details.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/connectivity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate and plot maps of habitat connectivity — connectivity","text":"indexes list spatRaster objects resulting unique combinations parameters specified either parameters.yaml sean(). unique combination parameters, index habitat connectivity calculated location landscape. indices used calculate mean variance habitat connectivity location across specified parameters. function save opted plots using - pmean, pvar pdiff. File saved provided value outdir  tempdir(). interactive() TRUE, plots can seen active plot window (e.g., plot panel Rstudio). maps plotted using SpatRaster objects. SpatRaster objects also available return value function.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/connectivity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate and plot maps of habitat connectivity — connectivity","text":"Yanru Xing, John F Hernandez Nopsa, Kelsey F Andersen, Jorge L Andrade-Piedra, Fenton D Beed, Guy Blomme, Mónica Carvajal-Yepes, Danny L Coyne, Wilmer J Cuellar, Gregory Forbes, Jan F Kreuze, Jürgen Kroschel, P Lava Kumar, James P Legg, Monica Parker, Elmar Schulte-Geldermann, Kalpana Sharma, Karen Garrett, Global Cropland connectivity: Risk Factor Invasion Saturation Emerging Pathogens Pests, BioScience, Volume 70, Issue 9, September 2020, Pages 744–758, doi:10.1093/biosci/biaa067 Hijmans R (2023). terra: Spatial Data Analysis. R package version 1.7-46, https://CRAN.R-project.org/package=terra","code":""},{"path":[]},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/cropharvest_rast.html","id":null,"dir":"Reference","previous_headings":"","what":"Get raster object for crop — cropharvest_rast","title":"Get raster object for crop — cropharvest_rast","text":"Get cropland information form raster object data source crop","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/cropharvest_rast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get raster object for crop — cropharvest_rast","text":"","code":"cropharvest_rast(crop_name, data_source)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/cropharvest_rast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get raster object for crop — cropharvest_rast","text":"crop_name Name crop data_source Data source cropland information","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/cropharvest_rast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get raster object for crop — cropharvest_rast","text":"Raster.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/cropharvest_rast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get raster object for crop — cropharvest_rast","text":"","code":"# \\donttest{ cropharvest_rast(\"avocado\", \"monfreda\") # }"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/crops_rast.html","id":null,"dir":"Reference","previous_headings":"","what":"Get sum of rasters for individual crops — crops_rast","title":"Get sum of rasters for individual crops — crops_rast","text":"Takes crop names returns raster object sum raster individual crops. Currently, supports crops listed geodata::monfredaCrops(), geodata::spamCrops() crop present multiple sources, mean calculated.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/crops_rast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get sum of rasters for individual crops — crops_rast","text":"","code":"crops_rast(crop_names)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/crops_rast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get sum of rasters for individual crops — crops_rast","text":"crop_names named list source along crop names","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/crops_rast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get sum of rasters for individual crops — crops_rast","text":"SpatRaster. Raster object sum individual crop raster","code":""},{"path":[]},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/crops_rast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get sum of rasters for individual crops — crops_rast","text":"","code":"# \\donttest{ crops_rast(list(monfreda = c(\"wheat\", \"barley\"), mapspam2010 = c(\"wheat\", \"potato\"))) # }"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/dist_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance methods supported — dist_methods","title":"Distance methods supported — dist_methods","text":"Contains supported strategies calculate distance two points. Use one two methods sean() sensitivity_analysis().","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/dist_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance methods supported — dist_methods","text":"","code":"dist_methods()"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/dist_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance methods supported — dist_methods","text":"vector","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/dist_methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance methods supported — dist_methods","text":"","code":"dist_methods() #> [1] \"geodesic\"          \"vincentyellipsoid\""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/dot-indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to extract risk indices from a list of crop rasters. — .indices","title":"Internal function to extract risk indices from a list of crop rasters. — .indices","text":"Internal function extract risk indices list crop rasters.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/dot-indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to extract risk indices from a list of crop rasters. — .indices","text":"","code":".indices(crop_rasters)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/dot-indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to extract risk indices from a list of crop rasters. — .indices","text":"crop_rasters List raster objects.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/dot-indices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to extract risk indices from a list of crop rasters. — .indices","text":"list risk indices.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/geohabnet-package.html","id":null,"dir":"Reference","previous_headings":"","what":"geohabnet: Geographical Risk Analysis Based on Habitat Connectivity — geohabnet-package","title":"geohabnet: Geographical Risk Analysis Based on Habitat Connectivity — geohabnet-package","text":"'geohabnet' package designed perform geographically spatially explicit risk analysis habitat connectivity. Xing et al (2021) doi:10.1093/biosci/biaa067  proposed concept cropland connectivity risk factor plant pathogen pest invasions. functions 'geohabnet' initially developed thinking cropland connectivity, users recommended first familiar concept looking Xing et al paper. nutshell, habitat connectivity analysis combines information maps host density, estimates relative likelihood pathogen movement habitat locations area interest, applies network analysis calculate connectivity habitat locations. functions 'geohabnet' built conduct habitat connectivity analysis relying geographic parameters (spatial resolution spatial extent), dispersal parameters (two commonly used dispersal kernels: inverse power law negative exponential models), network parameters (link weight thresholds network metrics). functionality main extensions provided functions 'geohabnet' habitat connectivity analysis ) Capability easily calculate connectivity locations landscape using single function, sensitivity_analysis() msean(). b) backbone datasets, 'geohabnet' package supports use two publicly available global datasets calculate cropland density. backbone datasets 'geohabnet' package include crop distribution maps Monfreda, C., N. Ramankutty, J. . Foley (2008) doi:10.1029/2007gb002947  \"Farming planet: 2. Geographic distribution crop areas, yields, physiological types, net primary production year 2000, Global Biogeochem. Cycles, 22, GB1022\" International Food Policy Research Institute (2019) doi:10.7910/DVN/PRFF8V  \"Global Spatially-Disaggregated Crop Production Statistics Data 2010 Version 2.0, Harvard Dataverse, V4\". Users can also provide geographic dataset represents host density. c) 'geohabnet' package allows R users provide maps host density (originally Xing et al (2021)), host landscape density (representing geographic distribution either crops wild species), habitat distribution (host landscape density adjusted climate suitability) inputs, propose term habitat connectivity. d) 'geohabnet' package allows R users customize parameter values habitat connectivity analysis, facilitating context-specific (pathogen- pest-specific) analyses. e) 'geohabnet' package allows users automatically visualize maps habitat connectivity locations resulting sensitivity analysis across customized parameter combinations. primary functions msean() sensitivity analysis(). functions 'geohabnet' provide three main outcomes: ) map mean habitat connectivity across parameters selected user, ii) map variance habitat connectivity across selected parameters, iii) map difference ranks habitat connectivity habitat density. function can used generate maps 'final' outcomes. function can also provide intermediate outcomes, adjacency matrices built perform analysis, can used network analysis. Refer article https://garrettlab.github.io/HabitatConnectivity/articles/analysis.html see examples function access outcome types. change parameter values, file called 'parameters.yaml' stores parameters values, can accessed using 'get_parameters()' set new parameter values 'set_parameters()'. Users can modify ten parameters.","code":""},{"path":[]},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/geohabnet-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"geohabnet: Geographical Risk Analysis Based on Habitat Connectivity — geohabnet-package","text":"Maintainer: Krishna Keshav krishnakeshav.pes@gmail.com Authors: Aaron Plex plexaaron@ufl.edu (ORCID) Karen Garrett karengarrett@ufl.edu (ORCID) contributors: Garrett Lab karengarrett@ufl.edu (https://garrettlab.com) [contributor] University Florida (https://www.ufl.edu) [copyright holder, funder]","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/geoscale_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Get geographical scales from the parameters — geoscale_param","title":"Get geographical scales from the parameters — geoscale_param","text":"function returns list geographical scales set global custom extent parameters.yaml. global TRUE, CustomExt ignored.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/geoscale_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get geographical scales from the parameters — geoscale_param","text":"","code":"geoscale_param(gparams = load_parameters())"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/geoscale_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get geographical scales from the parameters — geoscale_param","text":"gparams Optional. load_parameters() null","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/geoscale_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get geographical scales from the parameters — geoscale_param","text":"Vector. set geographic coordinates delimit extent region world.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/get_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Parameters — get_parameters","title":"Get Parameters — get_parameters","text":"function retrieves list parameters saves copy parameter file (type .yaml) specified output path.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/get_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Parameters — get_parameters","text":"","code":"get_parameters(out_path = tempdir(), iwindow = FALSE)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/get_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Parameters — get_parameters","text":"out_path character. output path parameter file copied. default temporary directory tempdir() iwindow logical. window = TRUE, prompt user select output directory using file chooser window. default value FALSE.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/get_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Parameters — get_parameters","text":"character. path copied parameter file.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/get_parameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Parameters — get_parameters","text":"Using configuration parameters structurally listed yaml file alternative method used sensitivity_analysis() function. parameter.yaml saved local directory, user can modify parameter value, save file changes, get new parameters back R set_parameters(). Note sean() msean() function require directly list parameters within function typical R packages.","code":""},{"path":[]},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/get_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Parameters — get_parameters","text":"","code":"get_parameters() #> [1] \"/var/folders/r5/zggvft9d3yn5kh51wqp78rd00000gn/T//RtmpRMoiHB/parameters.yaml\" get_parameters(out = tempdir()) #> [1] \"/var/folders/r5/zggvft9d3yn5kh51wqp78rd00000gn/T//RtmpRMoiHB/parameters.yaml\""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/get_rasters.html","id":null,"dir":"Reference","previous_headings":"","what":"Get rasters object from parameters See host object in get_parameters() or load_parameters(). — get_rasters","title":"Get rasters object from parameters See host object in get_parameters() or load_parameters(). — get_rasters","text":"Get rasters object parameters See host object get_parameters() load_parameters().","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/get_rasters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get rasters object from parameters See host object in get_parameters() or load_parameters(). — get_rasters","text":"","code":"get_rasters(host)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/get_rasters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get rasters object from parameters See host object in get_parameters() or load_parameters(). — get_rasters","text":"host SpatRaster. synonym Hosts object parameters. wrapper terra::rast() generates raster object provided TIF file.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/get_rasters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get rasters object from parameters See host object in get_parameters() or load_parameters(). — get_rasters","text":"List SpatRaster.","code":""},{"path":[]},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/get_rasters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get rasters object from parameters See host object in get_parameters() or load_parameters(). — get_rasters","text":"","code":"# Get default raster get_rasters(terra::rast()) #> class       : SpatRaster  #> dimensions  : 180, 360, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : -180, 180, -90, 90  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (CRS84) (OGC:CRS84)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/global_scales.html","id":null,"dir":"Reference","previous_headings":"","what":"Global geographical extent — global_scales","title":"Global geographical extent — global_scales","text":"function provides geographical extent used global analysis. function returns geographic extents eastern western hemispheres used analysis. geographic extent form c(Xmin, Xmax, Ymin, Ymax). geohabnet functions designed work coordinate reference system: lon/lat WGS 84 (EPSG:4326).","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/global_scales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global geographical extent — global_scales","text":"","code":"global_scales()"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/global_scales.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Global geographical extent — global_scales","text":"List. Named list scales eastern western hemispheres","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/global_scales.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Global geographical extent — global_scales","text":"habitat connectivity analysis global, functions geohabnet conduct two separate analyses, one geographical scale eastern hemisphere another western hemisphere. final outcomes (maps adjacency matrices) combined global analysis.","code":""},{"path":[]},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/gplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Raster* object — gplot","title":"Plot a Raster* object — gplot","text":"wrapper terra::plot() customized parameters enhanced visualization.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/gplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Raster* object — gplot","text":"","code":"gplot(x, ...)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/gplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Raster* object — gplot","text":"x Raster* object ... additional arguments passed terra::plot()","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/gplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a Raster* object — gplot","text":"plot","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/gplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a Raster* object — gplot","text":"","code":"r <- terra::rast(nrows=108, ncols=21, xmin=0, xmax=10) gplot(r)  gplot(r, col = \"red\") gplot(r, col = \"red\", breaks = 10)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/habitat_density-set.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the habitat density. — habitat_density<-","title":"Set the habitat density. — habitat_density<-","text":"function helps set SpatRaster habitat availability density GeoNetwork object. function S4 replacement method geohabnet package. allows assign host availability SpatRaster geohabnet object.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/habitat_density-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the habitat density. — habitat_density<-","text":"","code":"habitat_density(x) <- value"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/habitat_density-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the habitat density. — habitat_density<-","text":"x GeoNetwork object. value SpatRaster.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/habitat_density-set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the habitat density. — habitat_density<-","text":"object type x, , GeoNetwork. function returns updated S4 GeoNetwork object new habitat availability SpatRaster assigned.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/hci_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate difference map — hci_diff","title":"Calculate difference map — hci_diff","text":"function produces map difference ranks mean habitat connectivity habitat availability.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/hci_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate difference map — hci_diff","text":"","code":"hci_diff(x, y, global, geoscale, res = reso(), outdir = tempdir())"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/hci_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate difference map — hci_diff","text":"x SpatRaster. y SpatRaster. global Logical. Select TRUE global analysis desired, FALSE otherwise. east west required TRUE. geoscale Numeric vector. x cropped extent. res Numeric. parameter refers spatial aggregation factor. value number cells grouped aggregating raster layer fine coarse spatial resolution reduce computational costs. Setting parameter 1 aggregate raster layers. Default reso(). outdir Character. Output directory saving raster TIFF format. Default tempdir().","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/hci_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate difference map — hci_diff","text":"RiskMap. Contains result form SpatRaster objects file path saved maps.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/hci_diff.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate difference map — hci_diff","text":"Ideally, function tested yield desired results length((y[] > 0)) > length((x[] > 0)).","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/hci_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate mean of habitat connectivity in a region — hci_mean","title":"Calculate mean of habitat connectivity in a region — hci_mean","text":"Wrapper terra::mean(). Calculates mean list rasters habitat connectivity.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/hci_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate mean of habitat connectivity in a region — hci_mean","text":"","code":"hci_mean(   indices,   global = FALSE,   east = NULL,   west = NULL,   geoscale = NULL,   res = reso(),   plt = TRUE,   outdir = tempdir() )"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/hci_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate mean of habitat connectivity in a region — hci_mean","text":"indices List SpatRasters indicating habitat connectivity region. input represents spatial raster collection mean calculated. global Logical. Select TRUE global analysis desired, FALSE otherwise. east west required TRUE. east SpatRaster. Collection risk indices eastern extent. west SpatRaster. Collection risk indices western extent. TRUE, geoscale ignored. Default TRUE. geoscale Vector. refers geographical extent habitat connectivity analysis global set FALSE. Default NULL. res Numeric. parameter refers spatial aggregation factor. value number cells grouped aggregating raster layer fine coarse spatial resolution reduce computational costs. Setting parameter 1 aggregate raster layers. Default reso(). plt TRUE need plot mean map, FALSE otherwise. outdir Character. Output directory saving raster TIFF format. Default tempdir().","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/hci_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate mean of habitat connectivity in a region — hci_mean","text":"RiskMap. Contains result form SpatRaster objects file path saved maps.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/hci_variance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate variance of habitat connectivity in a region — hci_variance","title":"Calculate variance of habitat connectivity in a region — hci_variance","text":"function produces map variance habitat connectivity across selected parameter values","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/hci_variance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate variance of habitat connectivity in a region — hci_variance","text":"","code":"hci_variance(   indices,   rast,   global,   east = NULL,   west = NULL,   geoscale,   res = reso(),   outdir = tempdir() )"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/hci_variance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate variance of habitat connectivity in a region — hci_variance","text":"indices SpatRaster. Collection risk indices. rast SpatRaster. Template variance output global Logical. Select TRUE global analysis desired, FALSE otherwise. east west required TRUE. east SpatRaster. Collection risk indices eastern extent. west SpatRaster. Collection risk indices western extent. TRUE, geoscale ignored. Default TRUE. geoscale Vector. refers geographical extent habitat connectivity analysis global set FALSE. Default NULL. res Numeric. parameter refers spatial aggregation factor. value number cells grouped aggregating raster layer fine coarse spatial resolution reduce computational costs. Setting parameter 1 aggregate raster layers. Default reso(). outdir Character. Output directory saving raster TIFF format. Default tempdir().","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/hci_variance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate variance of habitat connectivity in a region — hci_variance","text":"RiskMap. Contains result form SpatRaster objects file path saved maps.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/host_density-set.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the host density. — host_density<-","title":"Set the host density. — host_density<-","text":"Sets host density slot GeoNetwork object","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/host_density-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the host density. — host_density<-","text":"","code":"host_density(x) <- value"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/host_density-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the host density. — host_density<-","text":"x GeoNetwork object. value SpatRaster.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/load_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Parameters from YAML File — load_parameters","title":"Load Parameters from YAML File — load_parameters","text":"function loads parameters YAML file stores object.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/load_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Parameters from YAML File — load_parameters","text":"","code":"load_parameters(filepath = .param_fp())"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/load_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Parameters from YAML File — load_parameters","text":"filepath Path YAML file containing parameters. default, takes value parameters.yaml R user's directory.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/load_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Parameters from YAML File — load_parameters","text":"object parameters values","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/load_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Parameters from YAML File — load_parameters","text":"","code":"# Load parameters from default file load_parameters() #> $`CCRI parameters` #> $`CCRI parameters`$GeoExtent #> $`CCRI parameters`$GeoExtent$global #> [1] TRUE #>  #> $`CCRI parameters`$GeoExtent$customExt #> [1] -115  -75    5   32 #>  #>  #> $`CCRI parameters`$DispersalKernelModels #> $`CCRI parameters`$DispersalKernelModels$InversePowerLaw #> $`CCRI parameters`$DispersalKernelModels$InversePowerLaw$beta #> $`CCRI parameters`$DispersalKernelModels$InversePowerLaw$beta[[1]] #> [1] 0.5 #>  #> $`CCRI parameters`$DispersalKernelModels$InversePowerLaw$beta[[2]] #> [1] 1 #>  #> $`CCRI parameters`$DispersalKernelModels$InversePowerLaw$beta[[3]] #> [1] 1.5 #>  #>  #>  #> $`CCRI parameters`$DispersalKernelModels$NegativeExponential #> $`CCRI parameters`$DispersalKernelModels$NegativeExponential$gamma #> $`CCRI parameters`$DispersalKernelModels$NegativeExponential$gamma[[1]] #> [1] 0.05 #>  #> $`CCRI parameters`$DispersalKernelModels$NegativeExponential$gamma[[2]] #> [1] 1 #>  #> $`CCRI parameters`$DispersalKernelModels$NegativeExponential$gamma[[3]] #> [1] 0.2 #>  #> $`CCRI parameters`$DispersalKernelModels$NegativeExponential$gamma[[4]] #> [1] 0.3 #>  #>  #>  #>  #> $`CCRI parameters`$NetworkMetrics #> $`CCRI parameters`$NetworkMetrics$InversePowerLaw #> $`CCRI parameters`$NetworkMetrics$InversePowerLaw$metrics #> [1] \"betweeness\"               \"NODE_STRENGTH\"            #> [3] \"Sum_of_nearest_neighbors\" \"eigenVector_centrAlitY\"   #>  #> $`CCRI parameters`$NetworkMetrics$InversePowerLaw$weights #> [1] 50 15 15 20 #>  #> $`CCRI parameters`$NetworkMetrics$InversePowerLaw$cutoff #> [1] -1 #>  #>  #> $`CCRI parameters`$NetworkMetrics$NegativeExponential #> $`CCRI parameters`$NetworkMetrics$NegativeExponential$metrics #> [1] \"betweeness\"               \"NODE_STRENGTH\"            #> [3] \"Sum_of_nearest_neighbors\" \"eigenVector_centrAlitY\"   #>  #> $`CCRI parameters`$NetworkMetrics$NegativeExponential$weights #> [1] 50 15 15 20 #>  #> $`CCRI parameters`$NetworkMetrics$NegativeExponential$cutoff #> [1] -1 #>  #>  #>  #> $`CCRI parameters`$PriorityMaps #> $`CCRI parameters`$PriorityMaps$OutDir #> NULL #>  #> $`CCRI parameters`$PriorityMaps$MeanCC #> [1] TRUE #>  #> $`CCRI parameters`$PriorityMaps$Difference #> [1] TRUE #>  #> $`CCRI parameters`$PriorityMaps$Variance #> [1] TRUE #>  #>  #> $`CCRI parameters`$Host #> NULL #>  #> $`CCRI parameters`$HostDensityThreshold #> [1] 1.5e-04 2.5e-05 #>  #> $`CCRI parameters`$AggregationStrategy #> [1] \"sum\"  \"mean\" #>  #> $`CCRI parameters`$DistanceStrategy #> [1] \"geodesic\" #>  #> $`CCRI parameters`$Resolution #> [1] 12 #>  #> $`CCRI parameters`$LinkThreshold #> [1] 1e-04 #>  #>"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/mapspam.html","id":null,"dir":"Reference","previous_headings":"","what":"Supported sources for Mapspam — mapspam","title":"Supported sources for Mapspam — mapspam","text":"Supported sources Mapspam","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/mapspam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Supported sources for Mapspam — mapspam","text":"","code":"mapspam()"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/monfreda.html","id":null,"dir":"Reference","previous_headings":"","what":"Supported sources for monfreda — monfreda","title":"Supported sources for monfreda — monfreda","text":"Supported sources monfreda","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/monfreda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Supported sources for monfreda — monfreda","text":"","code":"monfreda()"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/ndplot-GeoNetwork-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Network density — ndplot,GeoNetwork-method","title":"Network density — ndplot,GeoNetwork-method","text":"function first calculates network density dispersal parameter specified user. Network density compares number available links network versus total number possible links network. Network density measure well entire network , ranging 0 (connected ) 1 (fully connected). Calculates plots network density GeoNetwork object.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/ndplot-GeoNetwork-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Network density — ndplot,GeoNetwork-method","text":"","code":"# S4 method for class 'GeoNetwork' ndplot(x)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/ndplot-GeoNetwork-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Network density — ndplot,GeoNetwork-method","text":"x GeoNetwork object","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/ndplot-GeoNetwork-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Network density — ndplot,GeoNetwork-method","text":"Vector. two ggplot2 objects","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/ndplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Network density plot — ndplot","title":"Network density plot — ndplot","text":"function first calculates network density dispersal parameter specified user. Network density compares number available links network versus total number possible links network. Network density measure well entire network , ranging 0 (connected ) 1 (fully connected). function compares visually network density changes changes dispersal parameter values. words, calculates plots network density GeoNetwork object.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/ndplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Network density plot — ndplot","text":"","code":"ndplot(x)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/ndplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Network density plot — ndplot","text":"x GeoNetwork object","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/ndplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Network density plot — ndplot","text":"Vector. two ggplot2 objects, one dispersal parameter values negative exponential model one dispersal parameter values inverse power law model.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/nn_sum.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation on network metrics a.k.a centralities. — nn_sum","title":"Calculation on network metrics a.k.a centralities. — nn_sum","text":"functions igraph package adapted calculate habitat connectivity. context habitat connectivity, functions can interpreted follows: nn_sum(): Calculates sum nearest neighbors igraph::knn(). node_strength(): Calculates sum edge weights adjacent nodes igraph::strength(). betweenness(): Calculates node betweenness based number shortest paths. igraph::betweenness() function interprets link weights distances calculate shortest paths, betweeness() function geohabnet transforms link weights (relative likelihood pathogen pest movement) adjacency matrix higher link weight values shortest (likely) paths pathogen pest movement. ev(): Calculates eigenvector centrality positions within network igraph::eigen_centrality(). closeness(): measures many steps required access every vertex given vertex igraph::closeness(). igraph::closeness() function interprets link weights distances calculate shortest paths, transforms link weights (relative likelihood pathogen pest movement) adjacency matrix higher link weight values shortest (likely) paths pathogen pest movement. degree(): number adjacent edges igraph::degree(). pagerank(): page rank score vertices igraph::page_rank().","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/nn_sum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation on network metrics a.k.a centralities. — nn_sum","text":"","code":"nn_sum(crop_dm, ...)  node_strength(crop_dm, ...)  betweeness(crop_dm, ...)  ev(crop_dm, ...)  degree(crop_dm, ...)  closeness(crop_dm, ...)  pagerank(crop_dm, ...)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/nn_sum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation on network metrics a.k.a centralities. — nn_sum","text":"crop_dm square adjacency matrix, rows columns names represent nodes (locations) entry indicate relative likelihood pathogen, pest, species movement pair nodes. internal workflow, adjacency matrix comes result operations within sean() function. weight represents importance network metric habitat connectivity analysis. ... arguments corresponding funtions igraph","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/nn_sum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation on network metrics a.k.a centralities. — nn_sum","text":"SpatRaster. Representing connectivity node location.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/nn_sum.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculation on network metrics a.k.a centralities. — nn_sum","text":"Csardi G, Nepusz T (2006). “igraph software package complex network research.” InterJournal, Complex Systems, 1695. https://igraph.org.","code":""},{"path":[]},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/reset_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset parameters.yaml — reset_params","title":"Reset parameters.yaml — reset_params","text":"Resets values parameters.yaml file default initial values.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/reset_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset parameters.yaml — reset_params","text":"","code":"reset_params()"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/reset_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset parameters.yaml — reset_params","text":"Logical. TRUE function successfully executed","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/reset_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset parameters.yaml — reset_params","text":"","code":"reset_params() #> [1] TRUE"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/reso.html","id":null,"dir":"Reference","previous_headings":"","what":"Get resolution value — reso","title":"Get resolution value — reso","text":"Resolution stored parameter.yaml. , resolution values refer aggregation factor granularity. Granularity number small grid cells aggregated larger grid cells direction (horizontally vertically). example, finest spatial resolution Monfreda MAPSPAM dataset geohabnet 5 minutes, granularity value 6 result maps spatial resolution 0.5 degrees. provided, resolution value used analysis default 12 (two degrees using Monfreda MAPSPAM dataset). Otherwise, single integer value granularity equal greater one specified.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/reso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get resolution value — reso","text":"","code":"reso()"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/reso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get resolution value — reso","text":"Numeric. Resolution parameters.yaml. default 12.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/risk_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Get risk indices — risk_indices","title":"Get risk indices — risk_indices","text":"Get habitat connectivity index unique combination parameters GeoRasters object.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/risk_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get risk indices — risk_indices","text":"","code":"risk_indices(ri)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/risk_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get risk indices — risk_indices","text":"ri GeoRasters object","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/risk_indices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get risk indices — risk_indices","text":"List habitat connectivity indices. ri global, list contain two elements, one hemisphere. e.g. list(east = list(), west = list()). ri global, list contain single element, e.g. list().","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/risk_indices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get risk indices — risk_indices","text":"function unpack SpatRasters GeoModel thus future::future() safe.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/sa_onrasters.html","id":null,"dir":"Reference","previous_headings":"","what":"Run sensitivity analysis — sa_onrasters","title":"Run sensitivity analysis — sa_onrasters","text":"sensitivity_analysis() takes raster object parameters input. sa_onrasters() wrapper around sean() function. Takes raster object parameters input. msean_onrast() sa_onrasters(). Use side effects + results. Produces plots maps outcomes results returned object. produces plots maps outcomes results returned object.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/sa_onrasters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run sensitivity analysis — sa_onrasters","text":"","code":"sa_onrasters(rast, link_thresholds = c(0), hd_thresholds = c(0), ...)  msean_onrast(   global = TRUE,   geoscale = NULL,   res = reso(),   outdir = tempdir(),   ... )"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/sa_onrasters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run sensitivity analysis — sa_onrasters","text":"rast Raster object used analysis. link_thresholds Numeric vector. link threshold values hd_thresholds Numeric vector. host density threshold values ... Additional parameters passed sean(). global Logical. TRUE global analysis, FALSE otherwise. Default TRUE geoscale Numeric vector. Geographical coordinates form c(Xmin, Xmax, Ymin, Ymax) EPSG:4326 coordinate reference system. geoscale NuLL, extent extracted rast(SpatRaster) using terra::ext(). res Numeric. spatial aggregation factor used aggregate raster layer habitat availability, fine coars resolution. Default reso(). outdir Character. Output directory saving raster TIFF format. Default tempdir().","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/sa_onrasters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run sensitivity analysis — sa_onrasters","text":"list calculated CCRI indices operations. index generated combination paramters. One combination equivalent sean() function.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/sa_onrasters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run sensitivity analysis — sa_onrasters","text":"Error handled non-overlapping extents.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/sa_onrasters.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Run sensitivity analysis — sa_onrasters","text":"Yanru Xing, John F Hernandez Nopsa, Kelsey F Andersen, Jorge L Andrade-Piedra, Fenton D Beed, Guy Blomme, Mónica Carvajal-Yepes, Danny L Coyne, Wilmer J Cuellar, Gregory Forbes, Jan F Kreuze, Jürgen Kroschel, P Lava Kumar, James P Legg, Monica Parker, Elmar Schulte-Geldermann, Kalpana Sharma, Karen Garrett, Global Cropland connectivity: Risk Factor Invasion Saturation Emerging Pathogens Pests, BioScience, Volume 70, Issue 9, September 2020, Pages 744–758, doi:10.1093/biosci/biaa067 Hijmans R (2023). terra: Spatial Data Analysis. R package version 1.7-46, https://CRAN.R-project.org/package=terra","code":""},{"path":[]},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/scales.html","id":null,"dir":"Reference","previous_headings":"","what":"Only used when conducting a global analysis of habitat connectivity. Our strategy? Divide and conquer! Since global analyses require high-performance computing, an approach is to simplify the global analysis into two regional analyses: one analysis including the geographic extent for the East Hemisphere (or the Old World), and other for the West Hemisphere (mainly the Americas). After habitat connectivity within these hemisphere are calculated individually, they are combined to produce a global map of habitat connectivity back. — scales","title":"Only used when conducting a global analysis of habitat connectivity. Our strategy? Divide and conquer! Since global analyses require high-performance computing, an approach is to simplify the global analysis into two regional analyses: one analysis including the geographic extent for the East Hemisphere (or the Old World), and other for the West Hemisphere (mainly the Americas). After habitat connectivity within these hemisphere are calculated individually, they are combined to produce a global map of habitat connectivity back. — scales","text":"used conducting global analysis habitat connectivity. strategy? Divide conquer! Since global analyses require high-performance computing, approach simplify global analysis two regional analyses: one analysis including geographic extent East Hemisphere (Old World), West Hemisphere (mainly Americas). habitat connectivity within hemisphere calculated individually, combined produce global map habitat connectivity back.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/scales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Only used when conducting a global analysis of habitat connectivity. Our strategy? Divide and conquer! Since global analyses require high-performance computing, an approach is to simplify the global analysis into two regional analyses: one analysis including the geographic extent for the East Hemisphere (or the Old World), and other for the West Hemisphere (mainly the Americas). After habitat connectivity within these hemisphere are calculated individually, they are combined to produce a global map of habitat connectivity back. — scales","text":"","code":"scales"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/scales.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Only used when conducting a global analysis of habitat connectivity. Our strategy? Divide and conquer! Since global analyses require high-performance computing, an approach is to simplify the global analysis into two regional analyses: one analysis including the geographic extent for the East Hemisphere (or the Old World), and other for the West Hemisphere (mainly the Americas). After habitat connectivity within these hemisphere are calculated individually, they are combined to produce a global map of habitat connectivity back. — scales","text":"object class environment length 2.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/sean.html","id":null,"dir":"Reference","previous_headings":"","what":"Sensitivity analysis across maps of habitat connectivity — sean","title":"Sensitivity analysis across maps of habitat connectivity — sean","text":"function performs sensitivity analysis across different values habitat connectivity location map. combination selected parameters, index habitat connectivity calculated. sensitivity_analysis() wrapper around sean() function. msean() wrapper around sean() function. additional argument specify maps calculated using connectivity() function.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/sean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sensitivity analysis across maps of habitat connectivity — sean","text":"","code":"sean(   rast,   global = TRUE,   geoscale = NULL,   agg_methods = c(\"sum\", \"mean\"),   dist_method = \"geodesic\",   link_threshold = 0,   hd_threshold = 0,   res = reso(),   inv_pl = inv_powerlaw(NULL, betas = c(0.5, 1, 1.5), mets = c(\"betweeness\",     \"NODE_STRENGTH\", \"Sum_of_nearest_neighbors\", \"eigenVector_centrAlitY\"), we = c(50,     15, 15, 20), linkcutoff = -1),   neg_exp = neg_expo(NULL, gammas = c(0.05, 1, 0.2, 0.3), mets = c(\"betweeness\",     \"NODE_STRENGTH\", \"Sum_of_nearest_neighbors\", \"eigenVector_centrAlitY\"), we = c(50,     15, 15, 20), linkcutoff = -1) )  msean(   rast,   global = TRUE,   geoscale = NULL,   res = reso(),   ...,   outdir = tempdir() )"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/sean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sensitivity analysis across maps of habitat connectivity — sean","text":"rast Raster object used analysis. global Logical. TRUE global analysis, FALSE otherwise. Default TRUE geoscale Numeric vector. Geographical coordinates form c(Xmin, Xmax, Ymin, Ymax) EPSG:4326 coordinate reference system. geoscale NuLL, extent extracted rast(SpatRaster) using terra::ext(). agg_methods Character. One methods spatial aggregation - SUM, MEAN. Aggregation strategy scaling input raster desired resolution. dist_method Character. method calculate distance matrix. link_threshold Numeric. threshold value link weight. link weights threshold replaced zero connectivity analysis. Link weights represent relative likelihood pathogen, pest, invasive species movement pair host locations, calculated using gravity models based host density (availability) dispersal kernels. hd_threshold Numeric. threshold value habitat availability (e.g., cropland density host density). locations host density selected threshold excluded connectivity analysis, focuses analysis important locations. values habitat availability threshold can range 0 1; value 1, locations excluded analysis 0 include locations analysis. Selecting threshold , example, host density requires least knowing maximum value host density map avoid excluding locations analysis. value 1, locations excluded analysis 0 include locations analysis. Selecting threshold host density requires least knowing maximum value host density map avoid excluding locations analysis. res Numeric. spatial aggregation factor used aggregate raster layer habitat availability, fine coars resolution. Default reso(). inv_pl List. named list parameters inverse power law. See details. neg_exp List. named list parameters inverse negative exponential. See details. locations host density selected threshold excluded connectivity analysis, focuses analysis important locations. values host density threshold can range 0 1; ... arguments passed sean() outdir Character. Output directory saving raster TIFF format. Default tempdir().","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/sean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sensitivity analysis across maps of habitat connectivity — sean","text":"GeoRasters. GeoNetwork.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/sean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sensitivity analysis across maps of habitat connectivity — sean","text":"global = TRUE, geoscale ignored global_scales() used default. functions sean() msean() perform sensitivity analysis, differ return value. return value msean() GeoNetwork, contains result applying connectivity() function habitat connectivity indexes. Essentially, risk maps. neither inverse power law negative exponential dispersal kernel specified, function return error. msean(), three spatRasters produced following values. location area interest, mean habitat connectivity across selected parameters calculated. location area interest, variance habitat connectivity across selected parameters calculated. location area interest, difference rank habitat connectivity rank host density calculated. default, spatRasters plotted visualization.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/sean.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sensitivity analysis across maps of habitat connectivity — sean","text":"Yanru Xing, John F Hernandez Nopsa, Kelsey F Andersen, Jorge L Andrade-Piedra, Fenton D Beed, Guy Blomme, Mónica Carvajal-Yepes, Danny L Coyne, Wilmer J Cuellar, Gregory Forbes, Jan F Kreuze, Jürgen Kroschel, P Lava Kumar, James P Legg, Monica Parker, Elmar Schulte-Geldermann, Kalpana Sharma, Karen Garrett, Global Cropland connectivity: Risk Factor Invasion Saturation Emerging Pathogens Pests, BioScience, Volume 70, Issue 9, September 2020, Pages 744–758, doi:10.1093/biosci/biaa067 Hijmans R (2023). terra: Spatial Data Analysis. R package version 1.7-46, https://CRAN.R-project.org/package=terra","code":""},{"path":[]},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/search_crop.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for crop — search_crop","title":"Search for crop — search_crop","text":"returns dataset sources crop data available. Essentially, wrapper around geodata::spamCrops() geodata::monfredaCrops()","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/search_crop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for crop — search_crop","text":"","code":"search_crop(name)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/search_crop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for crop — search_crop","text":"name name crop","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/search_crop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for crop — search_crop","text":"Logical. Sources iin crop data available.","code":""},{"path":[]},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/search_crop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for crop — search_crop","text":"","code":"search_crop(\"coffee\") search_crop(\"wheat\") # \\donttest{ search_crop(\"jackfruit\") # }"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/sensitivity_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Sensitivity analysis for habitat connectivity — sensitivity_analysis","title":"Sensitivity analysis for habitat connectivity — sensitivity_analysis","text":"function runs sensitivity analysis habitat connectivity calculated based every combination selected parameters. Parameter values sensitivity_analysis() provided using function set_parameters(). parameters provided, sensitivity_analysis() function run sensitivity analysis using default set parameter values, accessible function get_parameters(). customize parameter values, open parameters.yaml automatically downloaded geohabnet installed, change, remove, add parameter values directly parameters.yaml save . values changed manually, run set_parameters() set new parameter values, return TRUE parameters set successfully.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/sensitivity_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sensitivity analysis for habitat connectivity — sensitivity_analysis","text":"","code":"sensitivity_analysis(maps = TRUE, alert = TRUE)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/sensitivity_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sensitivity analysis for habitat connectivity — sensitivity_analysis","text":"maps logical. TRUE maps outcomes plotted, FALSE otherwise. TRUE, three maps possible: map mean habitat connectivity, map variance habitat connectivity, map difference ranks habitat connectivity habitat density. alert logical. TRUE beep sound played analysis completed, FALSE otherwise","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/sensitivity_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sensitivity analysis for habitat connectivity — sensitivity_analysis","text":"GeoNetwork. Check documentation sean() function better explanation parameters used.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/sensitivity_analysis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sensitivity analysis for habitat connectivity — sensitivity_analysis","text":"location region, sensitivity_analysis() calculates habitat connectivity risk index (CCRI) proposed Xing et al. (2021). providing map habitat availability (opposed simply cropland density host availability), call output sensitivity analysis habitat connectivity index, broader term CCRI. :) default, sensitivity_analysis() runs sensitivity analysis global extent, see global_scales() details. function also plots maps outcomes automatically, suppress maps outcomes maps = FALSE interactive() FALSE. returned object class GeoNetwork, contains two types outcomes. One outcome type corresponds spatRasters representing maps habitat connectivity. second type corresponds adjacency matrices used calculate habitat connectivity, columns rows represent locations maps entries relative likelihood pathogen pest movement pair nodes.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/sensitivity_analysis.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sensitivity analysis for habitat connectivity — sensitivity_analysis","text":"Yanru Xing, John F Hernandez Nopsa, Kelsey F Andersen, Jorge L Andrade-Piedra, Fenton D Beed, Guy Blomme, Mónica Carvajal-Yepes, Danny L Coyne, Wilmer J Cuellar, Gregory Forbes, Jan F Kreuze, Jürgen Kroschel, P Lava Kumar, James P Legg, Monica Parker, Elmar Schulte-Geldermann, Kalpana Sharma, Karen Garrett, Global Cropland connectivity: Risk Factor Invasion Saturation Emerging Pathogens Pests, BioScience, Volume 70, Issue 9, September 2020, Pages 744–758, doi:10.1093/biosci/biaa067 Hijmans R (2023). terra: Spatial Data Analysis. R package version 1.7-46, https://CRAN.R-project.org/package=terra","code":""},{"path":[]},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/set_global_scales.html","id":null,"dir":"Reference","previous_headings":"","what":"Set global geographical extent — set_global_scales","title":"Set global geographical extent — set_global_scales","text":"function sets geographical extents used global analysis. See also geoscale_param() set geographic extent analysis global. geographic extent form c(Xmin, Xmax, Ymin, Ymax). Geographic extent must specified four values degrees represent geographic limits area analysis, following order: minimum longitude, maximum longitude, minimum latitude, maximum latitude. Degrees decimal notation negative sign southern western hemispheres.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/set_global_scales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set global geographical extent — set_global_scales","text":"","code":"set_global_scales(value)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/set_global_scales.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set global geographical extent — set_global_scales","text":"value list. Named list eastern western hemisphere extents. See usage.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/set_global_scales.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set global geographical extent — set_global_scales","text":"List. Named list scales eastern western hemispheres","code":""},{"path":[]},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/set_global_scales.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set global geographical extent — set_global_scales","text":"","code":"set_global_scales(list(east = c(-24, 180, -58, 60), west = c(-140, -34, -58, 60))) #> $east #> [1] -24 180 -58  60 #>  #> $west #> [1] -140  -34  -58   60 #>"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/set_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Parameters — set_parameters","title":"Set Parameters — set_parameters","text":"function allows user set parameters replacing existing parameters file new one. Use get_parameters() modify parameter values. running function, users can use modified parameters sensitivity_analysis().","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/set_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Parameters — set_parameters","text":"","code":"set_parameters(new_params, iwindow = FALSE)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/set_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Parameters — set_parameters","text":"new_params path new parameters file. iwindow Logical, indicating whether prompt user select new parameters file using file selection window. default value parameter set FALSE.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/set_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Parameters — set_parameters","text":"None","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/set_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Parameters — set_parameters","text":"","code":"param_fp <- get_parameters() set_parameters(param_fp) #> [1] TRUE"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/setmaps-Gmap-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the map slots in the Gmap object. — setmaps,Gmap-method","title":"Sets the map slots in the Gmap object. — setmaps,Gmap-method","text":"wraps results(SpatRasters) risk analysis.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/setmaps-Gmap-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the map slots in the Gmap object. — setmaps,Gmap-method","text":"","code":"# S4 method for class 'Gmap' setmaps(x, me, vari, dif)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/setmaps-Gmap-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets the map slots in the Gmap object. — setmaps,Gmap-method","text":"x Gmap object. GeoRaster object representing mean habitat connectivity. vari GeoRaster object representing variance habitat connectivity. dif GeoRaster object representing difference ranks habitat connectivity habitat availability.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/setmaps-Gmap-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets the map slots in the Gmap object. — setmaps,Gmap-method","text":"Gmap object.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/setprops-GeoModel-character-numeric-numeric-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Set properties of the GeoModel object. — setprops,GeoModel,character,numeric,numeric-method","title":"Set properties of the GeoModel object. — setprops,GeoModel,character,numeric,numeric-method","text":"Set properties GeoModel object.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/setprops-GeoModel-character-numeric-numeric-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set properties of the GeoModel object. — setprops,GeoModel,character,numeric,numeric-method","text":"","code":"# S4 method for class 'GeoModel,character,numeric,numeric' setprops(x, aggregation, hdthreshold, linkthreshold)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/setprops-GeoModel-character-numeric-numeric-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set properties of the GeoModel object. — setprops,GeoModel,character,numeric,numeric-method","text":"x GeoModel object. aggregation Character. value representing spatial aggregation method used aggregating habitat availability map conducting sensitivity analysis. two aggregation methods available geohabnet: sum /mean, either excludes NaNs aggregation. hdthreshold Numeric. numeric value representing threshold habitat availability (e.g., cropland density host density) used sensitivity analysis. linkthreshold Numeric. numeric value representing threshold link weights used calculate habitat connectivity location. Note link weights indicate relative likelihood species moving locations (nodes) correspond entries adjacency matrix.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/setprops-GeoModel-character-numeric-numeric-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set properties of the GeoModel object. — setprops,GeoModel,character,numeric,numeric-method","text":"GeoModel object updated properties.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/setprops.html","id":null,"dir":"Reference","previous_headings":"","what":"Set properties of the GeoModel object. — setprops","title":"Set properties of the GeoModel object. — setprops","text":"Set properties GeoModel object.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/setprops.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set properties of the GeoModel object. — setprops","text":"","code":"setprops(x, aggregation, hdthreshold, linkthreshold)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/setprops.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set properties of the GeoModel object. — setprops","text":"x GeoModel object. aggregation Character. value representing spatial aggregation method used aggregating habitat availability map conducting sensitivity analysis. two aggregation methods available geohabnet: sum /mean, either excludes NaNs aggregation. hdthreshold Numeric. numeric value representing threshold habitat availability (e.g., cropland density host density) used sensitivity analysis. linkthreshold Numeric. numeric value representing threshold link weights used calculate habitat connectivity location. Note link weights indicate relative likelihood species moving locations (nodes) correspond entries adjacency matrix.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/setprops.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set properties of the GeoModel object. — setprops","text":"GeoModel object updated properties.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/sp_rast.html","id":null,"dir":"Reference","previous_headings":"","what":"Raster for mapspam crop. — sp_rast","title":"Raster for mapspam crop. — sp_rast","text":"get raster crop mapspam dataset","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/sp_rast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raster for mapspam crop. — sp_rast","text":"","code":"sp_rast(crp, africa = FALSE)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/sp_rast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raster for mapspam crop. — sp_rast","text":"crp character. name crop. Case-insensitive. africa Fetch 2017 Mpaspam crop data Africa. Default FALSE.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/sp_rast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raster for mapspam crop. — sp_rast","text":"SpatRaster","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/sp_rast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Raster for mapspam crop. — sp_rast","text":"See geodata::spamCrops() supported crops.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/sp_rast.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Raster for mapspam crop. — sp_rast","text":"International Food Policy Research Institute, 2020. Spatially-Disaggregated Crop Production Statistics Data Africa South Sahara 2017. <doi: 10.7910/DVN/FSSKBW>, Harvard Dataverse, V2","code":""},{"path":[]},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/sp_rast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Raster for mapspam crop. — sp_rast","text":"","code":"# \\donttest{ sp_rast(\"potato\") sp_rast(\"potato\", TRUE) # }"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/supported_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns metrics currently supported in the analysis. — supported_metrics","title":"Returns metrics currently supported in the analysis. — supported_metrics","text":"Returns metrics currently supported analysis.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/supported_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns metrics currently supported in the analysis. — supported_metrics","text":"","code":"supported_metrics()"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/supported_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns metrics currently supported in the analysis. — supported_metrics","text":"vector supported metrics.","code":""},{"path":[]},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/supported_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns metrics currently supported in the analysis. — supported_metrics","text":"","code":"supported_metrics() #> [1] \"betweeness\"               \"node_strength\"            #> [3] \"sum_of_nearest_neighbors\" \"eigenvector_centrality\"   #> [5] \"closeness\"                \"degree\"                   #> [7] \"page_rank\""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/supported_sources.html","id":null,"dir":"Reference","previous_headings":"","what":"Get supported sources of crops — supported_sources","title":"Get supported sources of crops — supported_sources","text":"provided, cropharvest_rast() look cropland data specific source.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/supported_sources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get supported sources of crops — supported_sources","text":"","code":"supported_sources()"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/supported_sources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get supported sources of crops — supported_sources","text":"Vector supported sources. Also used lookup find get raster object.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/supported_sources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get supported sources of crops — supported_sources","text":"","code":"# Get currently supported sources supported_sources()"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/tiff_torast.html","id":null,"dir":"Reference","previous_headings":"","what":"Get raster object from tif file — tiff_torast","title":"Get raster object from tif file — tiff_torast","text":"wrapper terra::rast() generates raster object provided TIF file.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/tiff_torast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get raster object from tif file — tiff_torast","text":"","code":"tiff_torast(path_to_tif)"},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/tiff_torast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get raster object from tif file — tiff_torast","text":"path_to_tif TIFF file. encoding map raster format.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/tiff_torast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get raster object from tif file — tiff_torast","text":"SpatRaster.","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/reference/tiff_torast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get raster object from tif file — tiff_torast","text":"","code":"# \\donttest{ # Generate raster for usage fp <- paste(tempfile(), \".tif\", sep = \"\") ret <- utils::download.file( \"https://geohabnet.s3.us-east-2.amazonaws.com/util-rasters/avocado_HarvestedAreaFraction.tif\", destfile = fp, method = \"auto\", mode = \"wb\") tiff_torast(fp) # }"},{"path":"https://garrettlab.github.io/HabitatConnectivity/news/index.html","id":"geohabnet-22","dir":"Changelog","previous_headings":"","what":"geohabnet 2.2","title":"geohabnet 2.2","text":"CRAN release: 2025-05-21 Removed dependency Geodata package data sources Moved Vignettes articles Support terra::rast() Modified input structure parameters.yaml host_density->() now habitat_density()->","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/news/index.html","id":"geohabnet-213","dir":"Changelog","previous_headings":"","what":"geohabnet 2.1.3","title":"geohabnet 2.1.3","text":"CRAN release: 2024-06-27 Network density plot aviailable ndplot() non-global analysis Attempt CRAN submission","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/news/index.html","id":"geohabnet-212","dir":"Changelog","previous_headings":"","what":"geohabnet 2.1.2","title":"geohabnet 2.1.2","text":"CRAN release: 2024-04-08 Fixed issue TIF present","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/news/index.html","id":"geohabnet-211","dir":"Changelog","previous_headings":"","what":"geohabnet 2.1.1","title":"geohabnet 2.1.1","text":"CRAN release: 2024-04-05 Removed dependency Amazon S3","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/news/index.html","id":"geohabnet-210","dir":"Changelog","previous_headings":"","what":"geohabnet 2.1.0","title":"geohabnet 2.1.0","text":"CRAN release: 2024-03-28 Dispersal kernels can now either Inverse Power Law Exponential Renamed CCRI HCI","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/news/index.html","id":"geohabnet-200","dir":"Changelog","previous_headings":"","what":"geohabnet 2.0.0","title":"geohabnet 2.0.0","text":"CRAN release: 2024-02-27 Adoption habitat connectivity Corrected difference map Added support mapspam 2010 2017 Africa data Corrected weight transformation closeness betweenness Removed global variables Fixed bugs New functions - msean() New parameters Returning objects S4 classes sensitivity_analysis() include Adjacency matrix Supports parallel processing future package functions support risk parameters New/updated vignette New/updated examples New tests New/updated documentation","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/news/index.html","id":"geohabnet-101","dir":"Changelog","previous_headings":"","what":"geohabnet 1.0.1","title":"geohabnet 1.0.1","text":"CRAN release: 2023-10-31","code":""},{"path":"https://garrettlab.github.io/HabitatConnectivity/news/index.html","id":"geohabnet-100","dir":"Changelog","previous_headings":"","what":"geohabnet 1.0.0","title":"geohabnet 1.0.0","text":"CRAN release: 2023-10-20","code":""},{"path":[]},{"path":[]},{"path":"https://garrettlab.github.io/HabitatConnectivity/news/index.html","id":"geohabnet-0009000","dir":"Changelog","previous_headings":"","what":"geohabnet 0.0.0.9000","title":"geohabnet 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
